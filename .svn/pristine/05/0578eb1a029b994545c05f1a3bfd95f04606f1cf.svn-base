#!/usr/bin/perl
#
# agi-VDAD_ALL_inbound.agi version 2.0.5   *DBI-version*
# 
# runs when a call comes in from an inbound call. This script will 
# send the calls out to the closers that are logged in.
# ## THIS SCRIPT CONSOLIDATES THIRTEEN SEPARATE VDAD closer inbound SCRIPTS ##
# 
#
# You need to put lines similar to those below in your extensions.conf file:
# ; Below are the parameters needed for the script to be run properly
# ; 1. the method of call handling for the script:
# ; 	- CID - 	CID received, add record with phone number
# ; 	- CIDLOOKUP - 	Lookup CID to find record in whole system
# ; 	- CIDLOOKUPRL -	Restrict lookup to one list
# ; 	- CIDLOOKUPRC -	Restrict lookup to one campaign's lists
# ;     - CLOSER -      Closer calls from VICIDIAL fronters
# ; 	- ANI - 	ANI received, add record with phone number
# ; 	- ANILOOKUP - 	Lookup ANI to find record in whole system
# ; 	- ANILOOKUPRL -	Restrict lookup to one list
# ; 	- 3DIGITID - 	Enter 3 digit code to go to agent
# ; 	- 4DIGITID - 	Enter 4 digit code to go to agent
# ; 	- 5DIGITID - 	Enter 5 digit code to go to agent
# ; 	- 10DIGITID - 	Enter 10 digit code to go to agent
# ; 2. the method of searching for an available agent:
# ; 	- LO - Load Balance Overflow only (priority to home server)
# ; 	- LB - <default> Load Balance total system
# ; 	- SO - Home server only
# ; 3. the full name of the IN GROUP to be used in vicidial for the inbound call
# ; 4. the phone number that was called, for the log entry
# ; 5. the callerID or lead_id of the person that called(usually overridden)
# ; 6. the park extension audio file name if used
# ; 7. the status of the call initially(usually not used)
# ; 8. the list_id to insert the new lead under if it is new (and CID/ANI available)
# ; 9. the phone dialing code to insert with the new lead if new (and CID/ANI available)
# ; 10. the campaign_id to search within lists if CIDLOOKUPRC
# ; 11. the user to queue the call to for AGENTDIRECT in-group calls
#
# ;inbound VICIDIAL calls:
#exten => 1234,1,Answer                  ; Answer the line
#exten => 1234,2,AGI(agi-VDAD_ALL_inbound.agi,CID-----LB-----INB-----7274515134-----Closer-----park----------999-----1-----OUTB)
#exten => 1234,3,Hangup
#
# ;inbound with removal of first digit of callerID on all calls:
#exten => 1234,1,Answer                  ; Answer the line
#exten => 1234,n,set(CALLERID(num)=${CALLERID(num):1})
#exten => 1234,n,AGI(agi-VDAD_ALL_inbound.agi,CID-----LB-----INB-----7274515134-----Closer-----park----------999-----1-----OUTB)
#exten => 1234,n,Hangup
#
#; inbound VICIDIAL transfer calls [can arrive through PRI T1 crossover, IAX or SIP channel]
#exten => _90009.,1,Answer                  ; Answer the line
#exten => _90009.,2,AGI(agi-VDAD_ALL_inbound.agi,CLOSER-----LB-----CL_TESTCAMP-----7275551212-----Closer-----park----------999-----1)
#exten => _90009.,3,Hangup
#exten => _990009.,1,Answer                  ; Answer the line
#exten => _990009.,2,AGI(agi-VDAD_ALL_inbound.agi,CLOSER-----LB-----CL_TESTCAMP-----7275551212-----Closer-----park----------999-----1)
#exten => _990009.,3,Hangup
#; DID forwarded calls
#exten => _99909*.,1,Answer
#exten => _99909*.,2,AGI(agi-VDAD_ALL_inbound.agi)
#exten => _99909*.,3,Hangup
#
# Copyright (C) 2009  Matt Florell <vicidial@gmail.com>    LICENSE: AGPLv2
#
# changes:
# 70828-0924 - First Build
# 71013-0310 - Added use of default Music-on-hold instead of generic on-hold message
# 71020-1714 - fixed issues with MoH and stream_file messages
# 71024-2153 - Added CLOSER functionality for calls coming from VICIDIAL fronters
# 71029-1726 - Changed CLOSER-type campaigns to use new campaign_allow_inbound field
# 71030-0713 - fixed after-hours logging
# 71030-0939 - fixed issue where MoH was still playing, added ding and wait before transfer
# 71103-2305 - added group rank and fewest calls options to next_agent_call
# 71112-0058 - fixed multi-logging bug on CLOSER calls
# 71116-1045 - added fewest_calls_campaign agent call routing option
# 71128-1758 - added CIDLOOKUPRC method to search all lists within a campaign
# 80109-2348 - added option to trigger a system process when the call is sent to an agent
# 80227-0335 - added queue priority functionality
# 80302-0232 - added drop_action and transfer to in-group
# 80402-0142 - added code for manual dial transfer duplicate check
# 80430-1144 - added term_reason to vicidial_closer_log, QUEUETIMEOUT, AFTERHOURS
# 80501-0515 - added after hours transfer in-group
# 80525-1040 - added ability to convert IVR status inbound calls to LIVE in-group calls
# 80630-2232 - added queue_log logging of inbound calls
# 80821-0133 - fixed non-play issue with hold message
# 80918-0505 - Added place in line and estimated time on hold
# 81002-1120 - Added processing for DID forwarded calls
# 81011-1019 - Added option for press 1 to leave voicemail if wait time > hold-time-option-seconds
# 81020-0237 - Added term_reason logging for all possible exits of the script
# 81021-2315 - Changed and add queue_log logging
# 81024-0006 - Changed LOOKUP to insert new lead if phone_number < 3 digits, changed queue_sec calculation
# 81104-0301 - Changed code to alter callerIDnumber for remote agents to the number of the caller
# 81105-0248 - Added MySQL error logging
# 90103-0311 - Added sip-silences before transfers to fix rare MoH issues
# 90115-0601 - Added AGENTDIRECT functionality
#

$script = 'agi-VDAD_ALL_inbound.agi';
$dtmf_silent_prefix = '7';

$DROP_TIME = 720;	### default number of seconds to wait until you drop a waiting call
$start_moh=1;
$at='@';
$mel=1;					# Mysql Error Log enabled = 1
$mysql_log_count=103;
$one_mysql_log=0;


($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
$year = ($year + 1900);
$mon++;
if ($mon < 10) {$mon = "0$mon";}
if ($mday < 10) {$mday = "0$mday";}
if ($hour < 10) {$Fhour = "0$hour";}
if ($min < 10) {$min = "0$min";}
if ($sec < 10) {$sec = "0$sec";}

$hm = "$hour$min";
$hm = ($hm + 0);

$now_date_epoch = time();
$start_epoch = $now_date_epoch;
$now_date = "$year-$mon-$mday $hour:$min:$sec";
$CLInow_date = "$year-$mon-$mday\\ $hour:$min:$sec";
$start_time=$now_date;
	$CIDdate = "$mon$mday$hour$min$sec";
	$tsSQLdate = "$year$mon$mday$hour$min$sec";
	$SQLdate = "$year-$mon-$mday $hour:$min:$sec";
	$SQLdateBEGIN = $SQLdate;

$BDtarget = ($now_date_epoch - 5);
($Bsec,$Bmin,$Bhour,$Bmday,$Bmon,$Byear,$Bwday,$Byday,$Bisdst) = localtime($BDtarget);
$Byear = ($Byear + 1900);
$Bmon++;
if ($Bmon < 10) {$Bmon = "0$Bmon";}
if ($Bmday < 10) {$Bmday = "0$Bmday";}
if ($Bhour < 10) {$Bhour = "0$Bhour";}
if ($Bmin < 10) {$Bmin = "0$Bmin";}
if ($Bsec < 10) {$Bsec = "0$Bsec";}
	$BDtsSQLdate = "$Byear$Bmon$Bmday$Bhour$Bmin$Bsec";

# default path to astguiclient configuration file:
$PATHconf =		'/etc/astguiclient.conf';

open(conf, "$PATHconf") || die "can't open $PATHconf: $!\n";
@conf = <conf>;
close(conf);
$i=0;
foreach(@conf)
	{
	$line = $conf[$i];
	$line =~ s/ |>|\n|\r|\t|\#.*|;.*//gi;
	if ( ($line =~ /^PATHhome/) && ($CLIhome < 1) )
		{$PATHhome = $line;   $PATHhome =~ s/.*=//gi;}
	if ( ($line =~ /^PATHlogs/) && ($CLIlogs < 1) )
		{$PATHlogs = $line;   $PATHlogs =~ s/.*=//gi;}
	if ( ($line =~ /^PATHagi/) && ($CLIagi < 1) )
		{$PATHagi = $line;   $PATHagi =~ s/.*=//gi;}
	if ( ($line =~ /^PATHweb/) && ($CLIweb < 1) )
		{$PATHweb = $line;   $PATHweb =~ s/.*=//gi;}
	if ( ($line =~ /^PATHsounds/) && ($CLIsounds < 1) )
		{$PATHsounds = $line;   $PATHsounds =~ s/.*=//gi;}
	if ( ($line =~ /^PATHmonitor/) && ($CLImonitor < 1) )
		{$PATHmonitor = $line;   $PATHmonitor =~ s/.*=//gi;}
	if ( ($line =~ /^VARserver_ip/) && ($CLIserver_ip < 1) )
		{$VARserver_ip = $line;   $VARserver_ip =~ s/.*=//gi;}
	if ( ($line =~ /^VARDB_server/) && ($CLIDB_server < 1) )
		{$VARDB_server = $line;   $VARDB_server =~ s/.*=//gi;}
	if ( ($line =~ /^VARDB_database/) && ($CLIDB_database < 1) )
		{$VARDB_database = $line;   $VARDB_database =~ s/.*=//gi;}
	if ( ($line =~ /^VARDB_user/) && ($CLIDB_user < 1) )
		{$VARDB_user = $line;   $VARDB_user =~ s/.*=//gi;}
	if ( ($line =~ /^VARDB_pass/) && ($CLIDB_pass < 1) )
		{$VARDB_pass = $line;   $VARDB_pass =~ s/.*=//gi;}
	if ( ($line =~ /^VARDB_port/) && ($CLIDB_port < 1) )
		{$VARDB_port = $line;   $VARDB_port =~ s/.*=//gi;}
	$i++;
	}

if (!$VARDB_port) {$VARDB_port='3306';}
if (!$AGILOGfile) {$AGILOGfile = "$PATHlogs/agiout.$year-$mon-$mday";}
if (!$PRSLOGfile) {$PRSLOGfile = "$PATHlogs/prsout.$year-$mon-$mday";}
if (!$PRSTESTfile) {$PRSTESTfile = "$PATHlogs/prstest.$year-$mon-$mday";}
if (!$ERRLOGfile) {$ERRLOGfile = "$PATHlogs/MySQLerror.$year-$mon-$mday";}

use DBI;
use Time::HiRes ('gettimeofday','usleep','sleep');  # necessary to have perl sleep command of less than one second
use Asterisk::AGI;
$AGI = new Asterisk::AGI;

$dbhA = DBI->connect("DBI:mysql:$VARDB_database:$VARDB_server:$VARDB_port", "$VARDB_user", "$VARDB_pass")
    or die "Couldn't connect to database: " . DBI->errstr;

### Grab Server values from the database
$stmtA = "SELECT agi_output,local_gmt FROM servers where server_ip = '$VARserver_ip';";
$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
$sthArows=$sthA->rows;
	$dbhP=$dbhA;   $mysql_count='02001';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
$rec_count=0;
while ($sthArows > $rec_count)
	{
	$AGILOG = '0';
	 @aryA = $sthA->fetchrow_array;
		$DBagi_output =		"$aryA[0]";
		$local_gmt =		"$aryA[0]";
		if ($DBagi_output =~ /STDERR/)	{$AGILOG = '1';}
		if ($DBagi_output =~ /FILE/)	{$AGILOG = '2';}
		if ($DBagi_output =~ /BOTH/)	{$AGILOG = '3';}
	 $rec_count++;
	}
$sthA->finish();


### begin parsing run-time options ###
if (length($ARGV[0])>1)
{
	if ($AGILOG) {$agi_string = "Perl Environment Dump:";   &agi_output;}
	$i=0;
	while ($#ARGV >= $i)
	{
	$args = "$args $ARGV[$i]";
	if ($AGILOG) {$agi_string = "$i|$ARGV[$i]";   &agi_output;}
	$i++;
	}
	
	### list of command-line array arguments:
	@ARGV_vars = split(/-----/, $ARGV[0]);

	$call_handle_method = 	$ARGV_vars[0];
	$agent_search_method = 	$ARGV_vars[1];
	$channel_group = 	$ARGV_vars[2];
	$inbound_number = 	$ARGV_vars[3];
	$parked_by = 		$ARGV_vars[4];
	$park_extension = 	$ARGV_vars[5];
	$status = 			$ARGV_vars[6];
	$list_id = 			$ARGV_vars[7];
	$phone_code = 		$ARGV_vars[8];
	$Scampaign_id = 	$ARGV_vars[9];
	$agent_only = 		$ARGV_vars[10];
}

$|=1;
while(<STDIN>) 
{
	chomp;
	last unless length($_);
	if ($AGILOG)
	{
		if (/^agi_(\w+)\:\s+(.*)$/)
		{
			$AGI{$1} = $2;
		}
	}

	if (/^agi_uniqueid\:\s+(.*)$/)		{$unique_id = $1; $uniqueid = $unique_id;}
	if (/^agi_channel\:\s+(.*)$/)		{$channel = $1;}
	if (/^agi_extension\:\s+(.*)$/)		{$extension = $1;}
	if (/^agi_type\:\s+(.*)$/)		{$type = $1;}
	if (/^agi_callerid\:\s+(.*)$/)		{$callerid = $1;}
	if (/^agi_calleridname\:\s+(.*)$/)	{$calleridname = $1;}
}


if ( ($callerid =~ /\".*\"/) && ( (!$calleridname) or ($calleridname =~ /unknown/) ) )
	{
	$calleridname = $callerid;
	$calleridname =~ s/\<\d\d\d\d\d\d\d\d\d\d\>//gi;
	$calleridname =~ s/\"|\" //gi;
	}

	$callerid =~ s/\D//gi;
	$calleridname =~ s/unknown//gi;
if ( (!$callerid) or ($callerid =~ /unknown/) )
	{$callerid = $calleridname;}


$user_unavailable_action='';
##### special processing for DID forwarded calls  "99909*1*"
if ($extension =~ /^999\d\d\*/)
	{
	@EXT_vars = split(/\*/, $extension);
	
	$referring_extension =	$EXT_vars[0];	# initial extension sent
	$did_id =				$EXT_vars[1];	# the DID ID to grab settings from

	### Grab DID values from the database
	$stmtA = "SELECT call_handle_method,agent_search_method,group_id,did_pattern,list_id,phone_code,campaign_id,user,user_unavailable_action,user_route_settings_ingroup,did_route,voicemail_ext,extension,exten_context,phone,server_ip FROM vicidial_inbound_dids where did_id = '$did_id';";
	$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
	$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
	$sthArows=$sthA->rows;
		$dbhP=$dbhA;   $mysql_count='02002';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
	if ($sthArows > 0)
		{
		@aryA = $sthA->fetchrow_array;
		$call_handle_method = 			$aryA[0];
		$agent_search_method = 			$aryA[1];
		$did_in_group = 				$aryA[2];
		$inbound_number = 				$aryA[3];
		$list_id = 						$aryA[4];
		$phone_code = 					$aryA[5];
		$Scampaign_id = 				$aryA[6];
		$agent_only =					$aryA[7];
		$user_unavailable_action =		$aryA[8];
		$user_route_settings_ingroup =	$aryA[9];
		$did_route =					$aryA[10];
		$did_voicemail_ext =			$aryA[11];
		$did_extension =				$aryA[12];
		$did_exten_context =			$aryA[13];
		$did_phone =					$aryA[14];
		$did_phone_server_ip =			$aryA[15];
		if ($did_route =~ /AGENT/)
			{$channel_group = $user_route_settings_ingroup;}
		else
			{$channel_group = $did_in_group;}
		}
	$sthA->finish();
	}

if ($call_handle_method =~ /^CLOSER/)
{
	### allow for internal PRI/IAX/SIP transfer data string "90009*CL_uk3survy_*8301*10000123*universal*7275551212*1234*"
	if ($extension =~ /^900\d\d\*|^9900\d\d\*/)
		{
		@EXT_vars = split(/\*/, $extension);
		
		$referring_extension =	$EXT_vars[0];	# initial extension sent
		$channel_group =		$EXT_vars[1];	# name of the parked group "In-group"
		$inbound_number =		$EXT_vars[2];	# extension to send call to after parsing
		$parked_by =			$EXT_vars[3];	# leadID
		$park_extension =		$EXT_vars[4];	# filename of the on-hold music file
		$phone_number =			$EXT_vars[5];	# phone number of customer
		$fronter =				$EXT_vars[6];	# user of the fronter that transferred the call
		if ($channel_group =~ /AGENTDIRECT/) 
			{
			$agent_only =		$EXT_vars[7];	# optional AGENTDIRECT user to queue call for
			}
		$CIDlead_id = $parked_by;

		$PADlead_id = sprintf("%09s", $parked_by);	while (length($PADlead_id) > 9) {chop($PADlead_id);}
		# JmmddhhmmssLLLLLLLLL
			$JqueryCID = "J$CIDdate$PADlead_id";
			$callerid = $JqueryCID;
		### set the new call callerid to track the call
		print "SET CALLERID $JqueryCID\n";
		checkresult($result);
		if ($AGILOG) {$agi_string = "callerID changed: $JqueryCID";   &agi_output;}
		}
}

if ($call_handle_method =~ /^CID/)
{
	if (length($callerid)>0) {$phone_number = $callerid;}
	   else {$phone_number = '';}
	if (length($calleridname)>0) {$VLcomments = $calleridname;}
	   else {$VLcomments = '';}
}

#	if ($channel =~ /^SIP/) {$channel =~ s/-.*//gi;}
#	if ($channel =~ /^Zap\//) {$channel =~ s/-\d$//gi;}
	if (length($callerid)<10) {$callerid = $parked_by;}
	if (length($pin)>0) {$callerid = $pin;}


if ($call_handle_method =~ /^ANI/)
	{
	$phone_number='';
	### allow for external ANI to be collected on older RBS T1 circuits
	if ($extension =~ /\*\d\d\d\d\d\d\d\d\d\d\*/)
		{
		@EXT_vars = split(/\*/, $extension);
		$phone_number =	$EXT_vars[1];
		if ($AGILOG) {$agi_string = "ANI found: |$phone_number|";   &agi_output;}
		}
	}

foreach $i (sort keys %AGI) 
	{
	if ($AGILOG) {$agi_string = " -- $i = $AGI{$i}";   &agi_output;}
	}

if ($AGILOG) {$agi_string = "AGI Variables: |$unique_id|$channel|$extension|$type|$callerid|";   &agi_output;}


if (length($pin) < 1) {$pin=$inbound_number;}

$fronter = $pin;

if ($AGILOG) {$agi_string = "+++++ INBOUND CALL VDCL STARTED : |$channel_group|$callerid-$pin|$now_date";   &agi_output;}

$VDADphone='';
$VDADphone_code='';

if ($channel =~ /Local/i)
	{
	if ( ($inbound_number =~ /CXFER/) || ($call_handle_method =~ /^CLOSER/) )
		{
		if ($AGILOG) {$agi_string = "+++++ VDAD START LOCAL CHANNEL: CXFER OVERRIDE- $priority";   &agi_output;}
		if ($call_handle_method =~ /^CLOSER/) 
			{
			sleep(1);
			$stmtA = "SELECT count(*) FROM vicidial_auto_calls where lead_id='$CIDlead_id' and call_type='IN' and campaign_id='$channel_group' and channel NOT LIKE \"Local%\";";
				if ($AGILOG) {$agi_string = "|$stmtA|";   &agi_output;}
			$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
			$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
			$sthArows=$sthA->rows;
				$dbhP=$dbhA;   $mysql_count='02003';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
			$rec_count=0;
			while ($sthArows > $rec_count)
				{
				@aryA = $sthA->fetchrow_array;
				$Pseudo_duplicate_count	= "$aryA[0]";
				$rec_count++;
				}
			$sthA->finish();

			if ($Pseudo_duplicate_count > 0)
				{
				if ($AGILOG) {$agi_string = "+++++ INBOUND LOCAL DUPLICATE: EXITING- $priority";   &agi_output;}
				exit;
				}
			}
		}
	else
		{
		if ($AGILOG) {$agi_string = "+++++ VDAD START LOCAL CHANNEL: EXITING- $priority";   &agi_output;}
		exit;
		}
	}

### Grab Server values from the database
$cbc=0;
$stmtA = "SELECT voicemail_dump_exten,ext_context,answer_transfer_agent,local_gmt,asterisk_version,max_vicidial_trunks FROM servers where server_ip = '$VARserver_ip';";
$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
$sthArows=$sthA->rows;
	$dbhP=$dbhA;   $mysql_count='02004';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
while ($sthArows > $cbc)
	{
	@aryA = $sthA->fetchrow_array;
	
	$DBvoicemail_dump_exten	=		"$aryA[0]";
	$DBext_context		=			"$aryA[1]";
	$DBanswer_transfer_agent	=	"$aryA[2]";
	$DBSERVER_GMT		=			"$aryA[3]";
	$DBasterisk_version	=			"$aryA[4]";
	$DBmax_vicidial_trunks	=		"$aryA[5]";
	if ($DBvoicemail_dump_exten)	{$voicemail_dump_exten = $DBvoicemail_dump_exten;}
	if ($DBext_context)				{$ext_context = $DBext_context;}
	if ($DBanswer_transfer_agent)	{$answer_transfer_agent = $DBanswer_transfer_agent;}
	if ($DBSERVER_GMT)				{$SERVER_GMT = $DBSERVER_GMT;}
	if ($DBasterisk_version)		{$AST_ver = $DBasterisk_version;}
	if ($DBmax_vicidial_trunks)		{$max_vicidial_trunks = $DBmax_vicidial_trunks;}
	$cbc++;
	}
$sthA->finish();



### Grab inbound groups values from the database
$cbc=0;
$stmtA = "SELECT call_time_id,after_hours_action,after_hours_message_filename,after_hours_exten,after_hours_voicemail,welcome_message_filename,moh_context,onhold_prompt_filename,prompt_interval,agent_alert_exten,agent_alert_delay,drop_call_seconds,drop_action,drop_exten,next_agent_call,voicemail_ext,queue_priority,drop_inbound_group,afterhours_xfer_group,play_place_in_line,play_estimate_hold_time,hold_time_option,hold_time_option_seconds,hold_time_option_exten,hold_time_option_voicemail,hold_time_option_xfer_group,hold_time_option_callback_filename,hold_time_option_callback_list_id,hold_recall_xfer_group,no_delay_call_route,play_welcome_message FROM vicidial_inbound_groups where group_id = '$channel_group';";
$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
$sthArows=$sthA->rows;
	$dbhP=$dbhA;   $mysql_count='02005';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
while ($sthArows > $cbc)
	{
	@aryA = $sthA->fetchrow_array;
	
	$call_time_id	=				"$aryA[0]";
	$after_hours_action	=			"$aryA[1]";
	$after_hours_message_filename	=	"$aryA[2]";
	$after_hours_exten	=			"$aryA[3]";
	$after_hours_voicemail	=		"$aryA[4]";
	$welcome_message_filename	=	"$aryA[5]";
	$moh_context	=				"$aryA[6]";
	$onhold_prompt_filename	=		"$aryA[7]";
	$prompt_interval	=			"$aryA[8]";
	$agent_alert_exten	=			"$aryA[9]";
	$agent_alert_delay	=			"$aryA[10]";
	$drop_call_seconds	=			"$aryA[11]";
		$DROP_TIME = $drop_call_seconds;
	$drop_action =					"$aryA[12]";
	$drop_exten	=					"$aryA[13]";
	$CAMP_callorder	=				"$aryA[14]";
	$VDADvoicemail_ext =			"$aryA[15]";
		$VDADvoicemail_ext =~ s/\D//gi;
	$queue_priority =				"$aryA[16]";
	$drop_inbound_group =			"$aryA[17]";
	$afterhours_xfer_group =		"$aryA[18]";
	$play_place_in_line =			"$aryA[19]";
	$play_estimate_hold_time =		"$aryA[20]";
	$hold_time_option =				"$aryA[21]";
	$hold_time_option_seconds =		"$aryA[22]";
	$hold_time_option_exten =		"$aryA[23]";
	$hold_time_option_voicemail =	"$aryA[24]";
	$hold_time_option_xfer_group =	"$aryA[25]";
	$hold_time_option_callback_filename =	"$aryA[26]";
	$hold_time_option_callback_list_id =	"$aryA[27]";
	$hold_recall_xfer_group =		"$aryA[28]";
	$no_delay_call_route =			"$aryA[29]";
	if ($hold_time_option =~ /DROP_ACTION/)
		{$hold_time_option = $drop_action;}
	$play_welcome_message =			"$aryA[30]";

	$cbc++;
	}
$sthA->finish();

if ($wday==0) {$daySQL=',ct_sunday_start,ct_sunday_stop';}
if ($wday==1) {$daySQL=',ct_monday_start,ct_monday_stop';}
if ($wday==2) {$daySQL=',ct_tuesday_start,ct_tuesday_stop';}
if ($wday==3) {$daySQL=',ct_wednesday_start,ct_wednesday_stop';}
if ($wday==4) {$daySQL=',ct_thursday_start,ct_thursday_stop';}
if ($wday==5) {$daySQL=',ct_friday_start,ct_friday_stop';}
if ($wday==6) {$daySQL=',ct_saturday_start,ct_saturday_stop';}

### Grab call_times values from the database
$stmtA = "SELECT ct_default_start,ct_default_stop $daySQL FROM vicidial_call_times where call_time_id = '$call_time_id';";
$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
$sthArows=$sthA->rows;
	$dbhP=$dbhA;   $mysql_count='02006';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
@aryA = $sthA->fetchrow_array;
$ct_default_start	=		"$aryA[0]";
$ct_default_stop	=		"$aryA[1]";
$ct_day_start	=			"$aryA[2]";
$ct_day_stop	=			"$aryA[3]";
$sthA->finish();

if ( ($ct_day_start > 0) || ($ct_day_stop > 0) )  
	{
	$ct_default_start	=	$ct_day_start;
	$ct_default_stop	=	$ct_day_stop;
	}

$AGI->stream_file('sip-silence');
$AGI->stream_file('sip-silence');

if ($call_handle_method =~ /DIGITID$/)
	{
	&enter_pin_number;
	}

if ($call_handle_method =~ /LOOKUP/)
	{
	if (length($phone_number) < 3)
		{
		### insert a record into the vicidial_list table 
		$stmtA = "INSERT INTO vicidial_list (entry_date,modify_date,status,user,vendor_lead_code,source_id,list_id,called_since_last_reset,phone_code,phone_number,security_phrase,called_count,gmt_offset_now,comments) values('$SQLdate','$tsSQLdate','INBND','$fronter','$inbound_number','VDCL','$list_id','Y','$phone_code','$phone_number','$channel_group','1','$local_gmt','$VLcomments');";
		$affected_rows = $dbhA->do($stmtA);
			$dbhP=$dbhA;   $mysql_count='02007';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
		$cbc=0;
		$stmtB = "select LAST_INSERT_ID() LIMIT 1;";
		$sthA = $dbhA->prepare($stmtB) or die "preparing: ",$dbhA->errstr;
		$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
		$sthArows=$sthA->rows;
			$dbhP=$dbhA;   $stmtA=$stmtB;   $mysql_count='02008';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
		while ($sthArows > $cbc)
			{
			@aryA = $sthA->fetchrow_array;
			$insert_lead_id = "$aryA[0]";
			$cbc++; 
			}
		$sthA->finish();

		if ($AGILOG) {$agi_string = "VDAD vicidial_list insert |$insert_lead_id|$stmtA|";   &agi_output;}
		}
	else
		{
		$listSQL = '';
		if ($call_handle_method =~ /LOOKUPRL$/)
			{$listSQL = "and list_id='$list_id'";}
		else
			{
			if ($call_handle_method =~ /LOOKUPRC$/)
				{
				### Grab all lists associated with Scampaign_id
				$cbc=0;
				$SlistsSQL='';
				$stmtA = "SELECT list_id FROM vicidial_lists where campaign_id='$Scampaign_id' limit 100;";
				$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
				$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
				$sthArows=$sthA->rows;
					$dbhP=$dbhA;   $mysql_count='02009';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
				while ($sthArows > $cbc)
					{
					@aryA = $sthA->fetchrow_array;	
					$SlistsSQL	.= "'$aryA[0]',";
					$cbc++;
					}
				$sthA->finish();
				chop($SlistsSQL);

				if (length($SlistsSQL)>3)
					{$listSQL = "and list_id IN($SlistsSQL)";}
				}
			}

		$cbc=0;
		$stmtA= "SELECT lead_id from vicidial_list where phone_number='$phone_number' $listSQL order by last_local_call_time desc limit 1;";
			if ($AGILOG) {$agi_string = "VDAD vicidial_list search |$phone_number|$stmtA|";   &agi_output;}
		$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
		$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
		$sthArows=$sthA->rows;
			$dbhP=$dbhA;   $mysql_count='02010';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
		if ($sthArows > 0)
			{
			$rec_countCUSTDATA=0;	
			while ($sthArows > $cbc)
				{
				@aryA = $sthA->fetchrow_array;
					$insert_lead_id = "$aryA[0]";
				$cbc++;	
				} 
			$sthA->finish();

			if ($AGILOG) {$agi_string = "VDAD vicidial_list found |$insert_lead_id|$stmtA|";   &agi_output;}
			} 
		else 
			{
			### insert a record into the vicidial_list table 
			$stmtA = "INSERT INTO vicidial_list (entry_date,modify_date,status,user,vendor_lead_code,source_id,list_id,called_since_last_reset,phone_code,phone_number,security_phrase,called_count,gmt_offset_now,comments) values('$SQLdate','$tsSQLdate','INBND','$fronter','$inbound_number','VDCL','$list_id','Y','$phone_code','$phone_number','$channel_group','1','$local_gmt','$VLcomments');";
			$affected_rows = $dbhA->do($stmtA);
				$dbhP=$dbhA;   $mysql_count='02011';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
			$cbc=0;
			$stmtB = "select LAST_INSERT_ID() LIMIT 1;";
			$sthA = $dbhA->prepare($stmtB) or die "preparing: ",$dbhA->errstr;
			$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
			$sthArows=$sthA->rows;
				$dbhP=$dbhA;   $stmtA=$stmtB;   $mysql_count='02012';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
			while ($sthArows > $cbc)
				{
				@aryA = $sthA->fetchrow_array;
				$insert_lead_id = "$aryA[0]";
				$cbc++; 
				}
			$sthA->finish();

			if ($AGILOG) {$agi_string = "VDAD vicidial_list insert |$insert_lead_id|$stmtA|";   &agi_output;}
			}
		}
	}

else
	{
	if ($call_handle_method =~ /CLOSER/)
		{
		### Grab call lead parameters from vicidial_list table
		$cbc=0;
		$stmtA = "SELECT phone_number,phone_code,user FROM vicidial_list where lead_id='$CIDlead_id' limit 1;";
		$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
		$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
		$sthArows=$sthA->rows;
			$dbhP=$dbhA;   $mysql_count='02013';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
		while ($sthArows > $cbc)
			{
			@aryA = $sthA->fetchrow_array;	
			$campaign	= "$channel_group";
			$phone_number	= "$aryA[0]";
			$phone_code	= "$aryA[1]";
			$insert_lead_id	= "$CIDlead_id";
			$fronter	= "$aryA[2]";
			$cbc++;
			}
		$sthA->finish();
		}

	else
		{
		### insert a record into the vicidial_list table if no record was found above
		$stmtA = "INSERT INTO vicidial_list (entry_date,modify_date,status,user,vendor_lead_code,source_id,list_id,called_since_last_reset,phone_code,phone_number,security_phrase,called_count,gmt_offset_now,comments) values('$SQLdate','$tsSQLdate','INBND','$fronter','$inbound_number','VDCL','$list_id','Y','$phone_code','$phone_number','$channel_group','1','-5.00','$VLcomments');";
		$affected_rows = $dbhA->do($stmtA);
			$dbhP=$dbhA;   $mysql_count='02014';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
		$cbc=0;
		$stmtA = "select LAST_INSERT_ID() LIMIT 1;";
		$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
		$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
		$sthArows=$sthA->rows;
			$dbhP=$dbhA;   $mysql_count='02015';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
		while ($sthArows > $cbc)
			{
			@aryA = $sthA->fetchrow_array;
			$insert_lead_id = "$aryA[0]";
			$cbc++; 
			}
		$sthA->finish();
		}
	}



##### BEGIN AFTER HOURS CHECK #####
if ( ($hm < $ct_default_start) || ($hm > $ct_default_stop) )
	{
	$VHqueryCID = "VA$CIDdate$hour$min$sec$sec";

	$stmtA = "INSERT INTO vicidial_closer_log set status='DROP',start_epoch='$now_date_epoch',end_epoch='$now_date_epoch',length_in_sec='1',queue_seconds='0',lead_id = '$insert_lead_id',campaign_id='$channel_group',user='VDCL',list_id='$list_id',call_date='$now_date',phone_code='$phone_code',phone_number='$phone_number',comments='AFTER HOURS DROP',term_reason='AFTERHOURS',uniqueid='$uniqueid';";
	$affected_rows = $dbhA->do($stmtA);
		$dbhP=$dbhA;   $mysql_count='02016';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
	$stmtB = "select LAST_INSERT_ID() LIMIT 1;";
	$sthA = $dbhA->prepare($stmtB) or die "preparing: ",$dbhA->errstr;
	$sthA->execute or die "executing: $stmtB ", $dbhA->errstr;
	$sthArows=$sthA->rows;
		$dbhP=$dbhA;   $stmtA=$stmtB;   $mysql_count='02017';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
	if ($sthArows > 0)
		{
		@aryA = $sthA->fetchrow_array;
		$insert_close_id = "$aryA[0]";
		$cbc++; 
		}
	$sthA->finish();
	if ($AGILOG) {$agi_string = "--    VDCL vcl insert: |$affected_rows|$insert_lead_id|$insert_close_id|\n|$stmtA|";   &agi_output;}

	$stmtA = "UPDATE vicidial_list set status='DROP' where lead_id = '$insert_lead_id';";
	$affected_rows = $dbhA->do($stmtA);
		$dbhP=$dbhA;   $mysql_count='02018';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
	if ($AGILOG) {$agi_string = "--    VDCL vl update: |$affected_rows|$insert_lead_id|\n|$stmtA|";   &agi_output;}

	$stmtA = "DELETE FROM vicidial_auto_calls where callerid='$callerid' and server_ip='$VARserver_ip' order by call_time desc limit 1;";
	$affected_rows = $dbhA->do($stmtA);
		$dbhP=$dbhA;   $mysql_count='02019';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
	if ($AGILOG) {$agi_string = "--    VDCL vac record deleted: |$affected_rows| $VDADcampaign|";   &agi_output;}

	if ($after_hours_action =~ /EXTENSION|VOICEMAIL|IN_GROUP/)
		{
		if ($after_hours_action =~ /EXTENSION/)
			{
			$DROPexten = "$after_hours_exten";
			}
		if ($after_hours_action =~ /VOICEMAIL/)
			{
			$DROPexten = "$voicemail_dump_exten$after_hours_voicemail";
			}
		if ($after_hours_action =~ /IN_GROUP/)
			{ # 90009*CL_uk3survy_*8301*10000123*universal*7275551212*1234*"
			$S='*';
			$DROPexten = "90009*$afterhours_xfer_group$S$S$insert_lead_id$S$S$phone_number$S$fronter$S";
			}
		if (length($DROPexten)>0)
			{	### if DROP extension is defined then send the dropped call there instead of hangup
			if ($no_delay_call_route =~ /N/)
				{
				$AGI->stream_file('ding'); # stop music-on-hold process

				sleep(1);
				}

			if ($AGILOG) {$agi_string = "exiting the VDAD app after hours, transferring call to $DROPexten";   &agi_output;}
			print "SET CONTEXT $ext_context\n";
				checkresult($result);
			print "SET EXTENSION $DROPexten\n";
				checkresult($result);
			print "SET PRIORITY 1\n";
				checkresult($result);
			}
		}

	if ($after_hours_action =~ /HANGUP/)
		{
		### insert a NEW record to the vicidial_manager table to hangup the channel
		$stmtA = "INSERT INTO vicidial_manager values('','','$SQLdate','NEW','N','$VARserver_ip','','Hangup','$VHqueryCID','Channel: $channel','','','','','','','','','')";
		$affected_rows = $dbhA->do($stmtA);  
			$dbhP=$dbhA;   $mysql_count='02020';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
		if ($AGILOG) {$agi_string = "--    VDCL call_hungup after hours: |$VHqueryCID|$VDADconf_exten|$channel|insert to vicidial_manager";   &agi_output;}
		}
	if ($after_hours_action =~ /MESSAGE/)
		{
		$AGI->stream_file('sip-silence');
		$AGI->stream_file('sip-silence');
		$AGI->stream_file("$after_hours_message_filename");
		sleep(1);

		### insert a NEW record to the vicidial_manager table to hangup the channel
		$stmtA = "INSERT INTO vicidial_manager values('','','$SQLdate','NEW','N','$VARserver_ip','','Hangup','$VHqueryCID','Channel: $channel','','','','','','','','','')";
		$affected_rows = $dbhA->do($stmtA);  
			$dbhP=$dbhA;   $mysql_count='02021';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
		if ($AGILOG) {$agi_string = "--    VDCL call_hungup after hours: |$VHqueryCID|$VDADconf_exten|$channel|insert to vicidial_manager";   &agi_output;}
		}

	$dbhA->disconnect();

	exit;

	}
##### END AFTER HOURS CHECK #####




##### PLAY WELCOME MESSAGE #####
if ( ($welcome_message_filename !~ /---NONE---/) && ( ($play_welcome_message =~ /ALWAYS/) || ( ($no_delay_call_route =~ /N/) && ($play_welcome_message =~ /YES_UNLESS_NODELAY/) ) ) )
	{
	$AGI->stream_file("$welcome_message_filename");
	}
if ($play_welcome_message =~ /IF_WAIT_ONLY/)
	{$if_wait_play_welcome=1;}
else
	{$if_wait_play_welcome=0;}


$vci=0;
$INBOUNDcampsSQL='';
$stmtA = "SELECT campaign_id FROM vicidial_campaigns where active='Y' and campaign_allow_inbound='Y';";
$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
$sthArows=$sthA->rows;
	$dbhP=$dbhA;   $mysql_count='02022';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
	while ($sthArows > $vci)
	{
	@aryA = $sthA->fetchrow_array;
	if ($vci==0) {$INBOUNDcampsSQL	.= "'$aryA[0]'";}
	else {$INBOUNDcampsSQL	.= ",'$aryA[0]'";}
	$vci++;
	}
$sthA->finish();

if ($AGILOG) {$agi_string = "|$stmtA|$insert_lead_id|";   &agi_output;}

$PADlead_id = sprintf("%09s", $insert_lead_id);	while (length($PADlead_id) > 9) {chop($PADlead_id);}
# YmmddhhmmssLLLLLLLLL
	$YqueryCID = "Y$CIDdate$PADlead_id";
	$callerid = $YqueryCID;
### set the callerid 
print "SET CALLERID $YqueryCID\n";
checkresult($result);
if ($AGILOG) {$agi_string = "callerID changed: $YqueryCID";   &agi_output;}

if ($call_handle_method =~ /DIGITID$/)
	{
	$stmtA = "INSERT INTO vicidial_log (uniqueid,lead_id,campaign_id,call_date,start_epoch,status,phone_code,phone_number,user,processed) values('$uniqueid','$insert_lead_id','$channel_group','$SQLdate','$now_date_epoch','XFER','$phone_code','$phone_number','$fronter','N')";
		if ($AGILOG) {$agi_string = "|$stmtA|";   &agi_output;}
	$affected_rows = $dbhA->do($stmtA);
		$dbhP=$dbhA;   $mysql_count='02023';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
	if ($AGILOG) {$agi_string = "--    VDAD : |$insert_lead_id|$fronter|insert to vicidial_log: $uniqueid";   &agi_output;}
	}
$insert_xfer_id=0;
if ($call_handle_method =~ /CLOSER|DIGITID$/)
	{
	$stmtA = "INSERT INTO vicidial_xfer_log (lead_id,campaign_id,call_date,phone_code,phone_number,user,closer) values('$insert_lead_id','$channel_group','$SQLdate','$phone_code','$phone_number','$fronter','VDXL')";
		if ($AGILOG) {$agi_string = "|$stmtA|";   &agi_output;}
	$affected_rows = $dbhA->do($stmtA);
		$dbhP=$dbhA;   $mysql_count='02024';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
	$stmtB = "select LAST_INSERT_ID() LIMIT 1;";
	$sthA = $dbhA->prepare($stmtB) or die "preparing: ",$dbhA->errstr;
	$sthA->execute or die "executing: $stmtB ", $dbhA->errstr;
	$sthArows=$sthA->rows;
		$dbhP=$dbhA;   $stmtA=$stmtB;   $mysql_count='02025';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
	if ($sthArows > 0)
		{
		@aryA = $sthA->fetchrow_array;
		$insert_xfer_id = "$aryA[0]";
		$cbc++; 
		}
	$sthA->finish();

	if ($AGILOG) {$agi_string = "--    VDXL : |$insert_lead_id|$insert_xfer_id|insert to vicidial_xfer_log";   &agi_output;}
	}

#############################################
##### START QUEUEMETRICS LOGGING LOOKUP #####
$stmtA = "SELECT enable_queuemetrics_logging,queuemetrics_server_ip,queuemetrics_dbname,queuemetrics_login,queuemetrics_pass,queuemetrics_log_id,queuemetrics_eq_prepend FROM system_settings;";
$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
$sthArows=$sthA->rows;
	$dbhP=$dbhA;   $mysql_count='02026';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
$rec_count=0;
while ($sthArows > $rec_count)
	{
	 @aryA = $sthA->fetchrow_array;
		$enable_queuemetrics_logging =	"$aryA[0]";
		$queuemetrics_server_ip	=	"$aryA[1]";
		$queuemetrics_dbname =		"$aryA[2]";
		$queuemetrics_login=		"$aryA[3]";
		$queuemetrics_pass =		"$aryA[4]";
		$queuemetrics_log_id =		"$aryA[5]";
		$queuemetrics_eq_prepend =	"$aryA[6]";
	 $rec_count++;
	}
$sthA->finish();
##### END QUEUEMETRICS LOGGING LOOKUP #####
###########################################
if ($enable_queuemetrics_logging > 0)
	{
	 $data2 = "$phone_number";

	if ( (length($queuemetrics_eq_prepend) > 0) && ($queuemetrics_eq_prepend !~ /NONE/) )
		{
		$stmtA = "SELECT $queuemetrics_eq_prepend FROM vicidial_list where lead_id='$CIDlead_id';";
		$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
		$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
		$sthArows=$sthA->rows;
			$dbhP=$dbhA;   $mysql_count='02027';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
		$rec_count=0;
		while ($sthArows > $rec_count)
			{
			 $DASH='-';
			 @aryA = $sthA->fetchrow_array;
			 $QMprepend =	"$aryA[0]";
			 $rec_count++;
			 $data2 = "$QMprepend$DASH$phone_number";
			}
		$sthA->finish();
		}

	$dbhB = DBI->connect("DBI:mysql:$queuemetrics_dbname:$queuemetrics_server_ip:3306", "$queuemetrics_login", "$queuemetrics_pass")
	 or die "Couldn't connect to database: " . DBI->errstr;

	if ($DBX) {print "CONNECTED TO DATABASE:  $queuemetrics_server_ip|$queuemetrics_dbname\n";}

	$stmtB = "INSERT INTO queue_log SET partition='P01',time_id='$now_date_epoch',call_id='$YqueryCID',queue='$channel_group',agent='NONE',verb='ENTERQUEUE',data2='$data2',serverid='$queuemetrics_log_id';";
	$Baffected_rows = $dbhB->do($stmtB);
		$dbhP=$dbhB;   $stmtA=$stmtB;   $mysql_count='02028';   $MEL_aff_rows=$Baffected_rows;   &mysql_error_logging;
	$dbhB->disconnect();
	}


### If AGENTDIRECT set variable accordingly ###
$adSQL='';
if ($channel_group =~ /AGENTDIRECT/)
	{$adSQL = ",agent_only='$agent_only'";}

### check for an IVR status record in vicidial_auto_calls
$Uaffected_rows=0;
$stmtA = "select auto_call_id from vicidial_auto_calls where uniqueid='$uniqueid' and server_ip='$VARserver_ip';";
$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
$sthArows=$sthA->rows;
	$dbhP=$dbhA;   $mysql_count='02029';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
if ($sthArows > 0)
	{
	@aryA = $sthA->fetchrow_array;
	$auto_call_id = "$aryA[0]";

	### UPDATE existing record to LIVE in the vicidial_auto_calls table 
	$stmtA = "UPDATE vicidial_auto_calls SET campaign_id='$channel_group',status='LIVE',lead_id='$insert_lead_id',callerid='$callerid',channel='$channel',phone_code='$phone_code',phone_number='$phone_number',call_time='$SQLdate',call_type='IN',stage='LIVE-0',queue_priority='$queue_priority' $adSQL WHERE auto_call_id='$auto_call_id';";
		if ($AGILOG) {$agi_string = "|$stmtA|";   &agi_output;}
	$Uaffected_rows = $dbhA->do($stmtA);
		$dbhP=$dbhA;   $mysql_count='02029';   $MEL_aff_rows=$Uaffected_rows;   &mysql_error_logging;
	}
$sthA->finish();

if ($Uaffected_rows < 1)
	{
	### insert a LIVE record to the vicidial_auto_calls table 
	$stmtA = "INSERT INTO vicidial_auto_calls SET server_ip='$VARserver_ip', campaign_id='$channel_group', status='LIVE', lead_id='$insert_lead_id', uniqueid='$uniqueid', callerid='$callerid', channel='$channel', phone_code='$phone_code', phone_number='$phone_number', call_time='$SQLdate', call_type='IN', stage='LIVE-0', queue_priority='$queue_priority' $adSQL;";
		if ($AGILOG) {$agi_string = "|$stmtA|";   &agi_output;}
	$affected_rows = $dbhA->do($stmtA);
		$dbhP=$dbhA;   $mysql_count='02030';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
	}

$stmtA = "INSERT INTO vicidial_closer_log SET lead_id='$insert_lead_id', campaign_id='$channel_group', call_date='$SQLdate', start_epoch='$now_date_epoch', status='QUEUE', phone_code='$phone_code', phone_number='$phone_number', user='VDCL', processed='N', xfercallid='$insert_xfer_id', uniqueid='$uniqueid' $adSQL;";
	if ($AGILOG) {$agi_string = "|$stmtA|";   &agi_output;}
$affected_rows = $dbhA->do($stmtA);
	$dbhP=$dbhA;   $mysql_count='02031';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
$stmtB = "select LAST_INSERT_ID() LIMIT 1;";
$sthA = $dbhA->prepare($stmtB) or die "preparing: ",$dbhA->errstr;
$sthA->execute or die "executing: $stmtB ", $dbhA->errstr;
$sthArows=$sthA->rows;
	$dbhP=$dbhA;   $stmtA=$stmtB;   $mysql_count='02032';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
if ($sthArows > 0)
	{
	@aryA = $sthA->fetchrow_array;
	$insert_close_id = "$aryA[0]";
	$cbc++; 
	}
$sthA->finish();
if ($AGILOG) {$agi_string = "--    VDCL : |$insert_lead_id|$insert_xfer_id|$insert_close_id|insert to vicidial_closer_log";   &agi_output;}




$wait_in_queue=1;
$drop_timer=0;
$drop_seconds=0;
$hold_message_counter=($prompt_interval - 10);
$hold_tone_counter=0;
$skipLOSO=0;
$ADfindSQL='';
$ADUfindSQL='';

##########################################################
### For AGENTDIRECT calls try to send call to an agent ###
if ( ($channel_group =~ /AGENTDIRECT/) && (length($agent_only) > 1) )
	{
	$skipLOSO=1;
	$ADfindSQL = "and agent_only='$agent_only'";
	$ADUfindSQL = "and vicidial_live_agents.user='$agent_only'";
	}



############################################
### Loop to try to send call to an agent ###
while ( ($drop_timer <= $DROP_TIME) && ($wait_in_queue > 0) )
{
$channel_status = $AGI->channel_status("$channel");
if ($channel_status < 1)
	{
	if ($AGILOG) {$agi_string = "CHANNEL $channel DOWN $channel_status $DROP_TIME|$drop_timer CHECKING AGAIN";   &agi_output;}
	### sleep for 99 hundredths of a second
	usleep(1*990*1000);

	$channel_status_DC = $AGI->channel_status("$channel");

	if ($channel_status_DC < 1)
		{
		if ($AGILOG) {$agi_string = "CHANNEL $channel DOWN $channel_status   $DROP_TIME|$drop_timer";   &agi_output;}
		if ($drop_timer < 720) {$drop_seconds = $drop_timer;}
		$drop_timer = ($drop_timer + 720);
		}
	}

	$rec_countCUSTDATA=0;
	$rec_countWAIT=0;
	$gsp_countWAIT=0;
	$qp_countWAIT=0;
	$cbc=0;
	$aco_sub=0;
	$agent_call_order='order by last_call_finish';
	if ($CAMP_callorder =~ /overall_user_level/i)	{$agent_call_order = 'order by user_level desc,last_call_finish';}
	if ($CAMP_callorder =~ /oldest_call_start/i)	{$agent_call_order = 'order by last_call_time';}
	if ($CAMP_callorder =~ /oldest_call_finish/i)	{$agent_call_order = 'order by last_call_finish';}
	if ($CAMP_callorder =~ /random/i)				{$agent_call_order = 'order by random_id';}
	if ($CAMP_callorder =~ /campaign_rank/i)		{$agent_call_order = 'order by campaign_weight desc,last_call_finish';}
	if ($CAMP_callorder =~ /fewest_calls_campaign/i) {$agent_call_order = 'order by vicidial_live_agents.calls_today,vicidial_live_agents.last_call_finish';}
	if ($CAMP_callorder =~ /inbound_group_rank/i)	{$aco_sub=1;	$agent_call_order = 'order by group_weight desc';}
	if ($CAMP_callorder =~ /fewest_calls/i)			{$aco_sub=1;	$agent_call_order = 'order by vicidial_live_inbound_agents.calls_today,vicidial_live_inbound_agents.last_call_finish';}


$vci=0;
$INBOUNDcampsSQL="''";
$stmtA = "SELECT campaign_id FROM vicidial_campaigns where active='Y' and campaign_allow_inbound='Y';";
$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
$sthArows=$sthA->rows;
	$dbhP=$dbhA;   $mysql_count='02033';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
	while ($sthArows > $vci)
	{
	@aryA = $sthA->fetchrow_array;
	if ($vci < 1) {$INBOUNDcampsSQL	= "'$aryA[0]'";}
	else {$INBOUNDcampsSQL	.= ",'$aryA[0]'";}
	$vci++;
	}
$sthA->finish();

################################################################
##### Attempt to send call to an agent on this server only #####
if ( ($agent_search_method =~ /^SO|^LO/) && ($skipLOSO < 1) )
{
	### Get count of number of calls in this group that are ahead of this call
	$stmtA = "SELECT count(*) FROM vicidial_auto_calls where status = 'LIVE' and server_ip='$VARserver_ip' and campaign_id = '$channel_group' and call_time < \"$SQLdateBEGIN\" and lead_id != '$insert_lead_id';";
		if ($AGILOG) {$agi_string = "|$stmtA|";   &agi_output;}
	$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
	$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
	$sthArows=$sthA->rows;
		$dbhP=$dbhA;   $mysql_count='02034';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
	if ($sthArows > 0)
		{
		@aryA = $sthA->fetchrow_array;
		$rec_countWAIT = "$aryA[0]";
		$cbc++;
		}
	$sthA->finish();

	if ($rec_countWAIT < 1)
		{
		$qp_countWAIT=0;
		### Get count of number of waiting calls in higher priority groups than this call or the same priority with longer wait time
		$stmtA = "SELECT count(*) FROM vicidial_auto_calls where status = 'LIVE' and server_ip='$VARserver_ip' and lead_id != '$insert_lead_id' and ( (queue_priority > '$queue_priority') or (queue_priority = '$queue_priority' and call_time < \"$SQLdateBEGIN\"));";
			if ($AGILOG) {$agi_string = "|$stmtA|";   &agi_output;}
		$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
		$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
		$sthArows=$sthA->rows;
			$dbhP=$dbhA;   $mysql_count='02035';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
		if ($sthArows > 0)
			{
			@aryA = $sthA->fetchrow_array;
			$qp_countWAIT = "$aryA[0]";
			}
		$sthA->finish();

		$qp_groupWAIT='';
		$qp_groupWAIT_SQL='';
		$qp_groupWAIT_aco='';
		$qp_groupWAIT_aco_SQL='';
		$qp_groupWAIT_camp_SQL='';
		if ($qp_countWAIT > 0)
			{
			### Get group/campaign ids of calls in higher priority groups than this call or the same priority with longer wait time
			$stmtA = "SELECT distinct campaign_id FROM vicidial_auto_calls where status = 'LIVE' and server_ip='$VARserver_ip' and lead_id != '$insert_lead_id' and ( (queue_priority > '$queue_priority') or (queue_priority = '$queue_priority' and call_time < \"$SQLdateBEGIN\") );";
				if ($AGILOG) {$agi_string = "|$stmtA|";   &agi_output;}
			$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
			$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
			$sthArows=$sthA->rows;
				$dbhP=$dbhA;   $mysql_count='02036';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
			$dbc=0;
			$qp_groupWAIT='';
			while ($sthArows > $dbc)
				{
				@aryA = $sthA->fetchrow_array;
				$qp_groupWAIT_aco .= "'$aryA[0]',";
				if ($dbc > 0) 
					{
					$qp_groupWAIT .= "and ";
					}
				$qp_groupWAIT .= "closer_campaigns NOT LIKE \"% $aryA[0] %\" ";
				$dbc++;
				}
			chop($qp_groupWAIT_aco);

			$qp_groupWAIT_SQL = "and ($qp_groupWAIT)";
			$qp_groupWAIT_aco_SQL = "and vicidial_live_inbound_agents.group_id NOT IN($qp_groupWAIT_aco)";
			$qp_groupWAIT_camp_SQL = "and campaign_id NOT IN($qp_groupWAIT_aco)";

			$sthA->finish();
			}

		if ($aco_sub>0)
			{
			$stmtA = "LOCK TABLES vicidial_live_agents WRITE, vicidial_live_inbound_agents WRITE;";
			my $LOCKaffected_rows = $dbhA->do($stmtA);
				$dbhP=$dbhA;   $mysql_count='02037';   $MEL_aff_rows=$LOCKaffected_rows;   &mysql_error_logging;

			$stmtA = "SELECT vicidial_live_agents.conf_exten,vicidial_live_agents.user,vicidial_live_agents.extension from vicidial_live_agents JOIN vicidial_live_inbound_agents ON vicidial_live_agents.user=vicidial_live_inbound_agents.user WHERE status IN('CLOSER','READY') and lead_id<1 and server_ip='$VARserver_ip' and vicidial_live_inbound_agents.group_id='$channel_group' and last_update_time > '$BDtsSQLdate' $qp_groupWAIT_aco_SQL $qp_groupWAIT_camp_SQL $agent_call_order limit 1;";
				if ($AGILOG) {$agi_string = "|$stmtA|";   &agi_output;}
			$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
			$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
			$sthArows=$sthA->rows;
				$dbhP=$dbhA;   $mysql_count='02038';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;

				if ($sthArows > 0)
				{
				@aryA = $sthA->fetchrow_array;
				$VDADconf_exten	=	"$aryA[0]";
				$VDADuser	=		"$aryA[1]";
				$VDADextension	=	"$aryA[2]";
				}
			$sthA->finish();

				if ($sthArows > 0)
				{
				$stmtA = "UPDATE vicidial_live_agents set status='QUEUE',lead_id='$insert_lead_id',uniqueid='$unique_id', channel='$channel', callerid='$callerid',comments='INBOUND' where user='$VDADuser';";
				$Faffected_rows = $dbhA->do($stmtA);
					$dbhP=$dbhA;   $mysql_count='02039';   $MEL_aff_rows=$Faffected_rows;   &mysql_error_logging;
				$found_agents=$Faffected_rows;
				}
				else
				{
				$Faffected_rows=0;
				}

			$stmtA = "UNLOCK TABLES;";
			$LOCKaffected_rows = $dbhA->do($stmtA);
				$dbhP=$dbhA;   $mysql_count='02040';   $MEL_aff_rows=$LOCKaffected_rows;   &mysql_error_logging;
			}
		else
			{
			$stmtA = "UPDATE vicidial_live_agents set status='QUEUE',lead_id='$insert_lead_id',uniqueid='$unique_id', channel='$channel', callerid='$callerid',comments='INBOUND' where status IN('CLOSER','READY') and lead_id<1 and server_ip='$VARserver_ip' and campaign_id IN($INBOUNDcampsSQL) and closer_campaigns LIKE \"% $channel_group %\" and last_update_time > '$BDtsSQLdate' $qp_groupWAIT_SQL $qp_groupWAIT_camp_SQL $agent_call_order limit 1;";
			$Faffected_rows = $dbhA->do($stmtA);
				$dbhP=$dbhA;   $mysql_count='02041';   $MEL_aff_rows=$Faffected_rows;   &mysql_error_logging;
			$found_agents=$Faffected_rows;
			}
		if ($AGILOG) {$agi_string = "--    VDAD get agent: |$Faffected_rows|$channel_group|$stmtA|";   &agi_output;}
		if ($found_agents > 0)
			{
			if ($aco_sub<1)
				{
				$cbc=0;	
				$stmtA = "SELECT conf_exten,user,extension FROM vicidial_live_agents where status IN('QUEUE','INCALL') and server_ip='$VARserver_ip' and campaign_id IN($INBOUNDcampsSQL) and callerid='$callerid' and channel='$channel' order by last_call_time limit 1;";
					if ($AGILOG) {$agi_string = "|$stmtA|";   &agi_output;}
				$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
				$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
				$sthArows=$sthA->rows;
					$dbhP=$dbhA;   $mysql_count='02042';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
				$rec_countCUSTDATA=0;
					while ($sthArows > $cbc)
					{
					@aryA = $sthA->fetchrow_array;

					$VDADconf_exten	=	"$aryA[0]";
					$VDADuser	=		"$aryA[1]";
					$VDADextension	=	"$aryA[2]";
				
					$cbc++;
					}
				$sthA->finish();
				}

			$stmtA = "UPDATE vicidial_auto_calls set status='CLOSER', stage='CLOSER-$drop_timer' where callerid='$callerid';";
			$affected_rows = $dbhA->do($stmtA);
				$dbhP=$dbhA;   $mysql_count='02043';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
			if ($AGILOG) {$agi_string = "--    VDCL XFER : |$affected_rows|$callerid\n|$stmtA|";   &agi_output;}
			if ($affected_rows < 1)
				{
				$stmtA = "INSERT INTO vicidial_auto_calls SET server_ip='$VARserver_ip',campaign_id='$channel_group',status='CLOSER',lead_id='$insert_lead_id',uniqueid='$uniqueid',callerid='$callerid',channel='$channel',phone_code='$phone_code',phone_number='$phone_number',call_time='$SQLdate',call_type='IN',stage='CLOSER-$drop_timer',queue_priority='$queue_priority' $adSQL;";
				$affected_rows = $dbhA->do($stmtA);
					$dbhP=$dbhA;   $mysql_count='02044';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
					if ($AGILOG) {$agi_string = "$affected_rows|VDAC-reinsert|$stmtA|";   &agi_output;}
				}

			if ($enable_queuemetrics_logging > 0)
				{
				$dbhB = DBI->connect("DBI:mysql:$queuemetrics_dbname:$queuemetrics_server_ip:3306", "$queuemetrics_login", "$queuemetrics_pass")
				 or die "Couldn't connect to database: " . DBI->errstr;

				if ($DBX) {print "CONNECTED TO DATABASE:  $queuemetrics_server_ip|$queuemetrics_dbname\n";}
				$now_date_epoch = time();

				$stmtB = "INSERT INTO queue_log SET partition='P01',time_id='$now_date_epoch',call_id='$YqueryCID',queue='$channel_group',agent='Agent/$VDADuser',verb='CONNECT',data1='$drop_timer',serverid='$queuemetrics_log_id';";
				$Baffected_rows = $dbhB->do($stmtB);
					$dbhP=$dbhB;   $stmtA=$stmtB;   $mysql_count='02045';   $MEL_aff_rows=$Baffected_rows;   &mysql_error_logging;

				$dbhB->disconnect();
				}

		if ($call_handle_method =~ /CLOSER|DIGITID$/)
			{
			$stmtA = "UPDATE vicidial_xfer_log set closer='$VDADuser' where lead_id = '$insert_lead_id' order by call_date desc limit 1;";
			$affected_rows = $dbhA->do($stmtA);
				$dbhP=$dbhA;   $mysql_count='02046';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
			if ($AGILOG) {$agi_string = "--    VDXL XFER vicidial_xfer_log update: |$affected_rows|$insert_lead_id|$VDADuser\n|$stmtA|";   &agi_output;}
			}

			$stmtA = "UPDATE vicidial_closer_log set user='$VDADuser' where lead_id='$insert_lead_id' order by call_date desc limit 1;";
			$affected_rows = $dbhA->do($stmtA);
				$dbhP=$dbhA;   $mysql_count='02047';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
			if ($AGILOG) {$agi_string = "--    closer log : |$affected_rows|$insert_lead_id|$insert_close_id|\n|$stmtA|";   &agi_output;}

			### if agent alert exten is not disabled, then trigger the alert and wait
			if ( ($agent_alert_exten !~ /X/i) && ($no_delay_call_route !~ /Y/i) )
				{
				$VHqueryCID = "VH$CIDdate$VDADconf_exten";

				### insert a NEW record to the vicidial_manager table to play the alert message to the agent
				$stmtA = "INSERT INTO vicidial_manager values('','','$SQLdate','NEW','N','$VARserver_ip','','Originate','$VHqueryCID','Exten: $agent_alert_exten','Context: $ext_context','Channel: Local/$dtmf_silent_prefix$VDADconf_exten$at$ext_context','Priority: 1','Callerid: $CIDstring','Timeout: 10','','','','')";
				$affected_rows = $dbhA->do($stmtA);  
					$dbhP=$dbhA;   $mysql_count='02048';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
				if ($AGILOG) {$agi_string = "--    VDCL agent alert: |$VHqueryCID|7$VDADconf_exten|$channel|insert to vicidial_manager";   &agi_output;}

				usleep(1 * $agent_alert_delay * 1000);
				}

			if ($AGILOG) {$agi_string = "exiting VDAD app, transferring call to $VDADconf_exten";   &agi_output;}

			if ($no_delay_call_route =~ /N/)
				{
				$AGI->stream_file('ding'); # stop music-on-hold process
				}

			### update calls_today for vicidial_live_inbound_agents ###
			$stmtA = "SELECT calls_today from vicidial_inbound_group_agents WHERE user='$VDADuser' and group_id='$channel_group';";
				if ($AGILOG) {$agi_string = "|$stmtA|";   &agi_output;}
			$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
			$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
			$sthArows=$sthA->rows;
				$dbhP=$dbhA;   $mysql_count='02049';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
				if ($sthArows > 0)
				{
				@aryA = $sthA->fetchrow_array;
				$calls_today	= "$aryA[0]";
				$calls_today++;
				}
			$sthA->finish();

				if ($sthArows > 0)
				{
				$stmtA = "UPDATE vicidial_live_inbound_agents set calls_today='$calls_today' WHERE user='$VDADuser' and group_id='$channel_group';";
				$affected_rows = $dbhA->do($stmtA);
					$dbhP=$dbhA;   $mysql_count='02050';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
				$stmtA = "UPDATE vicidial_inbound_group_agents set calls_today='$calls_today' WHERE user='$VDADuser' and group_id='$channel_group';";
				$affected_rows = $dbhA->do($stmtA);
					$dbhP=$dbhA;   $mysql_count='02051';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
				if ($AGILOG) {$agi_string = "--    VDLIA agent calls: |$calls_today|$VDADuser|$channel_group|";   &agi_output;}
				}

			&trigger_transfer_process;

			if ($no_delay_call_route !~ /Y/i)
				{usleep(1*500*1000);}

				($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
				$year = ($year + 1900);
				$mon++;
				if ($mon < 10) {$mon = "0$mon";}
				if ($mday < 10) {$mday = "0$mday";}
				if ($hour < 10) {$Fhour = "0$hour";}
				if ($min < 10) {$min = "0$min";}
				if ($sec < 10) {$sec = "0$sec";}

			if ($VDADextension =~ /^R\//)
				{
				### set the callerid to the ACQS value(calleridname)
				## use these two lines for Asterisk 1.2 tree
				$newcallerid = "\"$callerid <$phone_number>\"";
				$AGI->set_callerid($newcallerid);
				## use these two lines for Asterisk 1.0 tree
			#	print "SET CALLERID \"$calleridname\" <0000000000>\n";
			#	print "SET CALLERIDNAME \"$calleridname\"\n";

				print STDERR "Setting CID \"$newcallerid\"\n";
				checkresult($result);
				if ($AGILOG) {$agi_string = "callerID changed: \"$callerid\" \<$phone_number\>";   &agi_output;}
				}

			$stmtA = "UPDATE vicidial_closer_log set queue_seconds='$drop_timer' where lead_id = '$insert_lead_id' and call_date='$SQLdate';";
			$affected_rows = $dbhA->do($stmtA);
				$dbhP=$dbhA;   $mysql_count='02052';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
			if ($AGILOG) {$agi_string = "--    VDCL vcl update: |$affected_rows|$insert_lead_id|$insert_close_id|\n|$stmtA|";   &agi_output;}

			$AGI->stream_file('sip-silence');
			$AGI->stream_file('sip-silence');

			print "SET CONTEXT $ext_context\n";
				checkresult($result);
			print "SET EXTENSION $VDADconf_exten\n";
				checkresult($result);
			print "SET PRIORITY 1\n";
				checkresult($result);

			$dbhA->disconnect();

				$now_date_epoch = time();
				$now_date = "$year-$mon-$mday $hour:$min:$sec";
			if ($AGILOG) {$agi_string = "XXXXX VDAD transferred: start|stop  $start_time|$now_date";   &agi_output;}
			
			exit;
			}
		else
			{
			if ($AGILOG) {$agi_string = "NNNNN No available local agent found";   &agi_output;}
			}
		}
	else
		{
		### For Debugging purposes display the call ahead of this call
		if ( ($rec_countWAIT == '1') && ($drop_timer > 3) && ($AGILOG) )
			{
			$stmtA = "SELECT call_time,campaign_id,last_update_time,callerid,status,channel FROM vicidial_auto_calls where status = 'LIVE' and server_ip='$VARserver_ip' and campaign_id = '$channel_group' and call_time < \"$SQLdateBEGIN\" and lead_id != '$insert_lead_id';";
				if ($AGILOG) {$agi_string = "|$stmtA|";   &agi_output;}
			$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
			$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
			$sthArows=$sthA->rows;
				$dbhP=$dbhA;   $mysql_count='02053';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
			$r=0;
			$agi_string="\n";
				while ($sthArows > $r)
				{
				@aryA = $sthA->fetchrow_array;
				$agi_string .= "|$aryA[0]|$aryA[1]|$aryA[2]|$aryA[3]|$aryA[4]|$aryA[5]|\n";
				$r++;
				}
			$sthA->finish();
			&agi_output;
			}
		if ($AGILOG) {$agi_string = "WWWWW VDAD XFER LOCAL WAIT: |$rec_countWAIT|$channel_group|$channel|$callerid|$uniqueid|$drop_timer|";   &agi_output;}
		}
}

if ($agent_search_method =~ /^LO|^LB/)
{

###################################################################################################
##### Attempt to send call to an agent on any server #####
	$cbc=0;
	$rec_countWAITrem=0;
	### Get count of number of calls in this group that are ahead of this call
	$stmtA = "SELECT count(*) FROM vicidial_auto_calls where status = 'LIVE' and campaign_id = '$channel_group' and call_time < \"$SQLdateBEGIN\" and lead_id != '$insert_lead_id' $ADfindSQL;";
		if ($AGILOG) {$agi_string = "|$stmtA|";   &agi_output;}
	$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
	$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
	$sthArows=$sthA->rows;
		$dbhP=$dbhA;   $mysql_count='02054';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
	if ($sthArows > 0)
		{
		@aryA = $sthA->fetchrow_array;
		$rec_countWAITrem = "$aryA[0]";
		$cbc++;
		}
	$sthA->finish();
	
	if ($rec_countWAITrem < 1)
		{
		$qp_countWAIT=0;
		### Get count of number of waiting calls in higher priority groups than this call or the same priority with longer wait time
		$stmtA = "SELECT count(*) FROM vicidial_auto_calls where status = 'LIVE' and lead_id != '$insert_lead_id' $ADfindSQL and ( (queue_priority > '$queue_priority') or (queue_priority = '$queue_priority' and call_time < \"$SQLdateBEGIN\") );";
			if ($AGILOG) {$agi_string = "|$stmtA|";   &agi_output;}
		$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
		$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
		$sthArows=$sthA->rows;
			$dbhP=$dbhA;   $mysql_count='02055';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
		if ($sthArows > 0)
			{
			@aryA = $sthA->fetchrow_array;
			$qp_countWAIT = "$aryA[0]";
			}
		$sthA->finish();

		$qp_groupWAIT='';
		$qp_groupWAIT_SQL='';
		$qp_groupWAIT_aco='';
		$qp_groupWAIT_aco_SQL='';
		$qp_groupWAIT_camp_SQL='';
		if ($qp_countWAIT > 0)
			{
			### Get group/campaign ids of calls in higher priority groups than this call or the same priority with longer wait time
			$stmtA = "SELECT distinct campaign_id FROM vicidial_auto_calls where status = 'LIVE' and lead_id != '$insert_lead_id' $ADfindSQL and ( (queue_priority > '$queue_priority') or (queue_priority = '$queue_priority' and call_time < \"$SQLdateBEGIN\") );";
				if ($AGILOG) {$agi_string = "|$stmtA|";   &agi_output;}
			$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
			$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
			$sthArows=$sthA->rows;
				$dbhP=$dbhA;   $mysql_count='02056';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
			$dbc=0;
			$qp_groupWAIT='';
			while ($sthArows > $dbc)
				{
				@aryA = $sthA->fetchrow_array;
				$qp_groupWAIT_aco .= "'$aryA[0]',";
				if ($dbc > 0) 
					{
					$qp_groupWAIT .= "and ";
					}
				$qp_groupWAIT .= "closer_campaigns NOT LIKE \"% $aryA[0] %\" ";
				$dbc++;
				}
			chop($qp_groupWAIT_aco);

				if ($AGILOG) {$agi_string = "|$stmtA|";   &agi_output;}

			$qp_groupWAIT_SQL = "and ($qp_groupWAIT)";
			$qp_groupWAIT_aco_SQL = "and vicidial_live_inbound_agents.group_id NOT IN($qp_groupWAIT_aco)";
			$qp_groupWAIT_camp_SQL = "and campaign_id NOT IN($qp_groupWAIT_aco)";

			$sthA->finish();
			}

		if ($aco_sub>0)
			{
			$stmtA = "LOCK TABLES vicidial_live_agents WRITE, vicidial_live_inbound_agents WRITE;";
			my $LOCKaffected_rows = $dbhA->do($stmtA);
				$dbhP=$dbhA;   $mysql_count='02057';   $MEL_aff_rows=$LOCKaffected_rows;   &mysql_error_logging;

			$stmtA = "SELECT vicidial_live_agents.conf_exten,vicidial_live_agents.user,vicidial_live_agents.extension,vicidial_live_agents.server_ip from vicidial_live_agents JOIN vicidial_live_inbound_agents ON vicidial_live_agents.user=vicidial_live_inbound_agents.user WHERE status IN('CLOSER','READY') and lead_id<1 $ADUfindSQL and vicidial_live_inbound_agents.group_id='$channel_group' and last_update_time > '$BDtsSQLdate' $qp_groupWAIT_aco_SQL $qp_groupWAIT_camp_SQL $agent_call_order limit 1;";
			$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
			$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
			$sthArows=$sthA->rows;
			$rec_countCUSTDATA=0;
				$dbhP=$dbhA;   $mysql_count='02058';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;

				if ($sthArows > 0)
				{
				@aryA = $sthA->fetchrow_array;

				$VDADconf_exten	=	"$aryA[0]";
				$VDADuser	=		"$aryA[1]";
				$VDADextension	=	"$aryA[2]";
				$VDADserver_ip	=	"$aryA[3]";
				}
			$sthA->finish();
				if ($AGILOG) {$agi_string = "$VDADuser|$stmtA|";   &agi_output;}

				if ($sthArows > 0)
				{
				$stmtA = "UPDATE vicidial_live_agents set status='QUEUE',lead_id='$insert_lead_id',uniqueid='$unique_id', channel='$channel', callerid='$callerid', call_server_ip='$VARserver_ip',comments='INBOUND' where user='$VDADuser';";
				$Faffected_rows = $dbhA->do($stmtA);
					$dbhP=$dbhA;   $mysql_count='02059';   $MEL_aff_rows=$Faffected_rows;   &mysql_error_logging;
				$found_agents=$Faffected_rows;
				}
				else
				{
				$Faffected_rows=0;
				}

			$stmtA = "UNLOCK TABLES;";
			my $LOCKaffected_rows = $dbhA->do($stmtA);
				$dbhP=$dbhA;   $mysql_count='02060';   $MEL_aff_rows=$LOCKaffected_rows;   &mysql_error_logging;
			}
		else
			{
			$stmtA = "UPDATE vicidial_live_agents set status='QUEUE',lead_id='$insert_lead_id',uniqueid='$unique_id', channel='$channel', callerid='$callerid', call_server_ip='$VARserver_ip',comments='INBOUND' where status IN('CLOSER','READY') and lead_id<1 $ADUfindSQL and campaign_id IN($INBOUNDcampsSQL) and closer_campaigns LIKE \"% $channel_group %\" and last_update_time > '$BDtsSQLdate' $qp_groupWAIT_SQL $qp_groupWAIT_camp_SQL $agent_call_order limit 1;";
			$Faffected_rows = $dbhA->do($stmtA);
				$dbhP=$dbhA;   $mysql_count='02061';   $MEL_aff_rows=$Faffected_rows;   &mysql_error_logging;
			$found_agents=$Faffected_rows;
				if ($AGILOG) {$agi_string = "$Faffected_rows|$stmtA|";   &agi_output;}
			}
		if ($AGILOG) {$agi_string = "--    VDAD get agent: |$DROP_TIME|$drop_timer|$Faffected_rows|$found_agents|update of vla table: $channel_group|\n|$stmtA|";   &agi_output;}
		if ($found_agents > 0)
			{
			if ($aco_sub<1)
				{
				$cbc=0;	
				$stmtA = "SELECT conf_exten,user,extension,server_ip,last_call_time FROM vicidial_live_agents where status IN('QUEUE','INCALL') and campaign_id IN($INBOUNDcampsSQL) and callerid='$callerid' and channel='$channel' order by last_call_time limit 1;";
				$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
				$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
				$sthArows=$sthA->rows;
					$dbhP=$dbhA;   $mysql_count='02062';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
				$rec_countCUSTDATA=0;
				if ($sthArows > 0)
					{
					@aryA = $sthA->fetchrow_array;
					$VDADconf_exten	=	"$aryA[0]";
					$VDADuser	=		"$aryA[1]";
					$VDADextension	=	"$aryA[2]";
					$VDADserver_ip	=	"$aryA[3]";
					$VDADlast_call_time="$aryA[4]";
					$cbc++;
					}
				$sthA->finish();
					if ($AGILOG) {$agi_string = "$VDADuser|$VDADlast_call_time|$stmtA|";   &agi_output;}
				}
			$stmtA = "UPDATE vicidial_auto_calls set status='CLOSER', stage='CLOSER-$drop_timer' where callerid='$callerid';";
			$affected_rows = $dbhA->do($stmtA);
				$dbhP=$dbhA;   $mysql_count='02063';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
			if ($AGILOG) {$agi_string = "--    VDCL XFER REMOTE: |$affected_rows|update of vac table: $callerid\n|$stmtA|";   &agi_output;}
			if ($affected_rows < 1)
				{
				$stmtA = "INSERT INTO vicidial_auto_calls SET server_ip='$VARserver_ip',campaign_id='$channel_group',status='CLOSER',lead_id='$insert_lead_id',uniqueid='$uniqueid',callerid='$callerid',channel='$channel',phone_code='$phone_code',phone_number='$phone_number',call_time='$SQLdate',call_type='IN',stage='CLOSER-$drop_timer',queue_priority='$queue_priority' $adSQL;";
				$affected_rows = $dbhA->do($stmtA);
					$dbhP=$dbhA;   $mysql_count='02064';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
					if ($AGILOG) {$agi_string = "$affected_rows|VDAC-reinsert|$stmtA|";   &agi_output;}
				}

			if ($enable_queuemetrics_logging > 0)
				{
				$dbhB = DBI->connect("DBI:mysql:$queuemetrics_dbname:$queuemetrics_server_ip:3306", "$queuemetrics_login", "$queuemetrics_pass")
				 or die "Couldn't connect to database: " . DBI->errstr;

				if ($DBX) {print "CONNECTED TO DATABASE:  $queuemetrics_server_ip|$queuemetrics_dbname\n";}
				$now_date_epoch = time();

				$stmtB = "INSERT INTO queue_log SET partition='P01',time_id='$now_date_epoch',call_id='$YqueryCID',queue='$channel_group',agent='Agent/$VDADuser',verb='CONNECT',data1='$drop_timer',serverid='$queuemetrics_log_id';";
				$Baffected_rows = $dbhB->do($stmtB);
					$dbhP=$dbhB;   $stmtA=$stmtB;   $mysql_count='02065';   $MEL_aff_rows=$Baffected_rows;   &mysql_error_logging;

				$dbhB->disconnect();
				}

			$stmtA = "UPDATE vicidial_xfer_log set closer='$VDADuser' where lead_id = '$insert_lead_id' order by call_date desc limit 1;";
			$affected_rows = $dbhA->do($stmtA);
				$dbhP=$dbhA;   $mysql_count='02066';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
			if ($AGILOG) {$agi_string = "--    VDXL vicidial_xfer_log update: |$affected_rows|$insert_lead_id|$VDADuser\n|$stmtA|";   &agi_output;}

			$stmtA = "UPDATE vicidial_closer_log set user='$VDADuser' where lead_id='$insert_lead_id' order by call_date desc limit 1;";
			$affected_rows = $dbhA->do($stmtA);
				$dbhP=$dbhA;   $mysql_count='02067';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
			if ($AGILOG) {$agi_string = "--    closer log : |$affected_rows|update of vcl table: $insert_lead_id\n|$stmtA|";   &agi_output;}

			### format the remote server dialstring to get the call to the overflow agent meetme room
			$S='*';
			if( $VDADserver_ip =~ m/(\S+)\.(\S+)\.(\S+)\.(\S+)/ )
				{
				$a = leading_zero($1); 
				$b = leading_zero($2); 
				$c = leading_zero($3); 
				$d = leading_zero($4);
				$VDADremDIALstr = "$a$S$b$S$c$S$d$S";
				}
			$alertVDADremDIALstr = "$VDADremDIALstr";
			$alertVDADremDIALstr .= "$dtmf_silent_prefix$VDADconf_exten";
			$VDADremDIALstr .= "$VDADconf_exten";

			### if agent alert exten is not disabled, then trigger the alert and wait
			if ( ($agent_alert_exten !~ /X/i) && ($no_delay_call_route !~ /Y/i) )
				{
				$VHqueryCID = "VH$CIDdate$VDADconf_exten";

				### insert a NEW record to the vicidial_manager table to play the alert message to the agent
				$stmtA = "INSERT INTO vicidial_manager values('','','$SQLdate','NEW','N','$VARserver_ip','','Originate','$VHqueryCID','Exten: $agent_alert_exten','Context: $ext_context','Channel: Local/$alertVDADremDIALstr$at$ext_context','Priority: 1','Callerid: $CIDstring','Timeout: 10','','','','')";
				$affected_rows = $dbhA->do($stmtA);  
					$dbhP=$dbhA;   $mysql_count='02068';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
				if ($AGILOG) {$agi_string = "--    VDCL agent alert: |$VHqueryCID|$alertVDADremDIALstr|$channel|insert to vicidial_manager";   &agi_output;}

				usleep(1 * $agent_alert_delay * 1000);
				}

			if ($AGILOG) {$agi_string = "exiting VDAD app, transferring call to $VDADremDIALstr";   &agi_output;}

			if ($no_delay_call_route =~ /N/)
				{
				$AGI->stream_file('ding'); # stop music-on-hold process
				}

			### update calls_today for vicidial_live_inbound_agents ###
			$stmtA = "SELECT calls_today from vicidial_inbound_group_agents WHERE user='$VDADuser' and group_id='$channel_group';";
				if ($AGILOG) {$agi_string = "|$stmtA|";   &agi_output;}
			$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
			$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
			$sthArows=$sthA->rows;
				$dbhP=$dbhA;   $mysql_count='02069';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
				if ($sthArows > 0)
				{
				@aryA = $sthA->fetchrow_array;
				$calls_today	= "$aryA[0]";
				$calls_today++;
				}
			$sthA->finish();

				if ($sthArows > 0)
				{
				$stmtA = "UPDATE vicidial_live_inbound_agents set calls_today='$calls_today' WHERE user='$VDADuser' and group_id='$channel_group';";
				$affected_rows = $dbhA->do($stmtA);
					$dbhP=$dbhA;   $mysql_count='02070';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
				$stmtA = "UPDATE vicidial_inbound_group_agents set calls_today='$calls_today' WHERE user='$VDADuser' and group_id='$channel_group';";
				$affected_rows = $dbhA->do($stmtA);
					$dbhP=$dbhA;   $mysql_count='02071';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
				if ($AGILOG) {$agi_string = "--    VDLIA agent calls: |$calls_today|$VDADuser|$channel_group|";   &agi_output;}
				}

			&trigger_transfer_process;

			if ($no_delay_call_route !~ /Y/i)
				{usleep(1*500*1000);}

				($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
				$year = ($year + 1900);
				$mon++;
				if ($mon < 10) {$mon = "0$mon";}
				if ($mday < 10) {$mday = "0$mday";}
				if ($hour < 10) {$Fhour = "0$hour";}
				if ($min < 10) {$min = "0$min";}
				if ($sec < 10) {$sec = "0$sec";}

			if ($VDADextension =~ /^R\//)
				{
				### set the callerid to the ACQS value(calleridname)
				## use these two lines for Asterisk 1.2 tree
				$newcallerid = "\"$callerid <$phone_number>\"";
				$AGI->set_callerid($newcallerid);
				## use these two lines for Asterisk 1.0 tree
			#	print "SET CALLERID \"$calleridname\" <0000000000>\n";
			#	print "SET CALLERIDNAME \"$calleridname\"\n";

				print STDERR "Setting CID \"$newcallerid\"\n";
				checkresult($result);
				if ($AGILOG) {$agi_string = "callerID changed: \"$callerid\" \<$phone_number\>";   &agi_output;}
				}

			$stmtA = "UPDATE vicidial_closer_log set queue_seconds='$drop_timer' where lead_id = '$insert_lead_id' and call_date='$SQLdate';";
			$affected_rows = $dbhA->do($stmtA);
				$dbhP=$dbhA;   $mysql_count='02072';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
			if ($AGILOG) {$agi_string = "--    VDCL vcl update: |$affected_rows|$insert_lead_id|\n|$stmtA|";   &agi_output;}

			$AGI->stream_file('sip-silence');
			$AGI->stream_file('sip-silence');

			print "SET CONTEXT $ext_context\n";
				checkresult($result);
			print "SET EXTENSION $VDADremDIALstr\n";
				checkresult($result);
			print "SET PRIORITY 1\n";
				checkresult($result);

			$dbhA->disconnect();

				$now_date_epoch = time();
				$now_date = "$year-$mon-$mday $hour:$min:$sec";
			if ($AGILOG) {$agi_string = "XXXXX VDAD transferred: start|stop  $start_time|$now_date";   &agi_output;}
			
			exit;
			}
		else
			{
			if ($AGILOG) {$agi_string = "NNNNN No available balance agent found";   &agi_output;}
			}
		}
	else
		{
		if ( ($rec_countWAITrem == '1') && ($drop_timer > 3) && ($AGILOG) )
			{
			$stmtA = "SELECT call_time,campaign_id,last_update_time,callerid,status,channel FROM vicidial_auto_calls where status = 'LIVE' and campaign_id = '$channel_group' and call_time < \"$SQLdateBEGIN\" and lead_id != '$insert_lead_id';";
				if ($AGILOG) {$agi_string = "|$stmtA|";   &agi_output;}
			$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
			$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
			$sthArows=$sthA->rows;
				$dbhP=$dbhA;   $mysql_count='02073';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
			$r=0;
			$agi_string="\n";
				while ($sthArows > $r)
				{
				@aryA = $sthA->fetchrow_array;
				$agi_string .= "|$aryA[0]|$aryA[1]|$aryA[2]|$aryA[3]|$aryA[4]|$aryA[5]|\n";
				$r++;
				}
			$sthA->finish();
			&agi_output;
			}

		if ($AGILOG) {$agi_string = "WWWWW VDAD XFER BALANCE WAIT: |$rec_countWAITrem|$channel_group|$channel|$callerid|$uniqueid|$drop_timer|";   &agi_output;}
		}

}

if ($hold_recall_xfer_group !~ /NONE/)
	{
	$now_date_epoch = time();
	$FDtarget = ($now_date_epoch - 86400);
	($Fsec,$Fmin,$Fhour,$Fmday,$Fmon,$Fyear,$Fwday,$Fyday,$Fisdst) = localtime($FDtarget);
	$Fyear = ($Fyear + 1900);
	$Fmon++;
	if ($Fmon < 10) {$Fmon = "0$Fmon";}
	if ($Fmday < 10) {$Fmday = "0$Fmday";}
	if ($Fhour < 10) {$Fhour = "0$Fhour";}
	if ($Fmin < 10) {$Fmin = "0$Fmin";}
	if ($Fsec < 10) {$Fsec = "0$Fsec";}
		$hrxgSQLdate = "$Fyear-$Fmon-$Fmday $Fhour:$Fmin:$Fsec";

	$stmtA = "SELECT count(*) FROM vicidial_closer_log where call_date > \"$hrxgSQLdate\" and phone_number='$phone_number';";
		if ($AGILOG) {$agi_string = "|$stmtA|";   &agi_output;}
	$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
	$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
	$sthArows=$sthA->rows;
		$dbhP=$dbhA;   $mysql_count='02074';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
	if ($sthArows > 0)
		{
		@aryA = $sthA->fetchrow_array;
		$hrxg_count = "$aryA[0]";
		}
	$sthA->finish();

	if ($hrxg_count > 1)
		{
		$S='*';
		$DROPexten = "90009*$hold_recall_xfer_group$S$S$insert_lead_id$S$S$phone_number$S$fronter$S";

		if ($no_delay_call_route =~ /N/)
			{
			$AGI->stream_file('ding'); # stop music-on-hold process
			sleep(1);
			}

		$stmtA = "DELETE FROM vicidial_auto_calls where callerid='$callerid' and server_ip='$VARserver_ip' order by call_time desc limit 1;";
		$affected_rows = $dbhA->do($stmtA);
			$dbhP=$dbhA;   $mysql_count='02075';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
		if ($AGILOG) {$agi_string = "--    VDCL vac record deleted: |$affected_rows| $VDADcampaign|";   &agi_output;}

		if ($drop_seconds < 1) {$drop_seconds = $drop_timer;}

		$stmtA = "UPDATE vicidial_closer_log set status='HXFER',end_epoch='$now_date_epoch',length_in_sec='$drop_seconds',queue_seconds='$drop_seconds',term_reason='HOLDRECALLXFER' where lead_id = '$insert_lead_id' order by start_epoch desc limit 1;";
		$affected_rows = $dbhA->do($stmtA);
			$dbhP=$dbhA;   $mysql_count='02076';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
		if ($AGILOG) {$agi_string = "--    VDCL vcl update: |$affected_rows|$insert_lead_id|\n|$stmtA|";   &agi_output;}

		$stmtA = "UPDATE vicidial_list set status='HXFER' where lead_id = '$insert_lead_id';";
		$affected_rows = $dbhA->do($stmtA);
			$dbhP=$dbhA;   $mysql_count='02077';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
		if ($AGILOG) {$agi_string = "--    VDCL vl update: |$affected_rows|$insert_lead_id|\n|$stmtA|";   &agi_output;}

		if ($enable_queuemetrics_logging > 0)
			{
			$dbhB = DBI->connect("DBI:mysql:$queuemetrics_dbname:$queuemetrics_server_ip:3306", "$queuemetrics_login", "$queuemetrics_pass")
			 or die "Couldn't connect to database: " . DBI->errstr;

			if ($DBX) {print "CONNECTED TO DATABASE:  $queuemetrics_server_ip|$queuemetrics_dbname\n";}

			$place=0;
			if ($rec_countWAIT > 0) {$place = $rec_countWAIT;}
			if ($rec_countWAITrem > 0) {$place = $rec_countWAITrem;}
			$place++;

			$stmtB = "INSERT INTO queue_log SET partition='P01',time_id='$now_date_epoch',call_id='$YqueryCID',queue='$channel_group',agent='NONE',verb='EXITWITHKEY',data1='3',data2='$place',serverid='$queuemetrics_log_id';";
			$Baffected_rows = $dbhB->do($stmtB);
				$dbhP=$dbhB;   $stmtA=$stmtB;   $mysql_count='02078';   $MEL_aff_rows=$Baffected_rows;   &mysql_error_logging;

			$stmtB = "INSERT INTO queue_log SET partition='P01',time_id='$now_date_epoch',call_id='$YqueryCID',queue='$channel_group',agent='NONE',verb='CALLSTATUS',data1='HXFER',serverid='$queuemetrics_log_id';";
			$Baffected_rows = $dbhB->do($stmtB);
				$dbhP=$dbhB;   $stmtA=$stmtB;   $mysql_count='02079';   $MEL_aff_rows=$Baffected_rows;   &mysql_error_logging;

			$dbhB->disconnect();
			}

		$AGI->stream_file('sip-silence');
		$AGI->stream_file('sip-silence');

		if ($AGILOG) {$agi_string = "exiting the VDAD app, transferring call to $DROPexten";   &agi_output;}
		print "SET CONTEXT $ext_context\n";
			checkresult($result);
		print "SET EXTENSION $DROPexten\n";
			checkresult($result);
		print "SET PRIORITY 1\n";
			checkresult($result);
			
		$dbhA->disconnect();

		exit;
		}
	}

if ($if_wait_play_welcome > 0)
	{
	$if_wait_play_welcome=0;

	$now_date_epoch = time();
	$FDtarget = ($now_date_epoch + 20);
	($Fsec,$Fmin,$Fhour,$Fmday,$Fmon,$Fyear,$Fwday,$Fyday,$Fisdst) = localtime($FDtarget);
	$Fyear = ($Fyear + 1900);
	$Fmon++;
	if ($Fmon < 10) {$Fmon = "0$Fmon";}
	if ($Fmday < 10) {$Fmday = "0$Fmday";}
	if ($Fhour < 10) {$Fhour = "0$Fhour";}
	if ($Fmin < 10) {$Fmin = "0$Fmin";}
	if ($Fsec < 10) {$Fsec = "0$Fsec";}
		$FDtsSQLdate = "$Fyear$Fmon$Fmday$Fhour$Fmin$Fsec";

	$stmtA = "UPDATE vicidial_auto_calls set last_update_time='$FDtsSQLdate' where callerid='$callerid' order by call_time desc limit 1;";
	$affected_rows = $dbhA->do($stmtA);
		$dbhP=$dbhA;   $mysql_count='02080';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
	if ($AGILOG) {$agi_string = "--    VDAC posttime record: |$affected_rows|$FDtsSQLdate|$callerid|";   &agi_output;}

	$AGI->stream_file('sip-silence'); # stop music-on-hold process
	$AGI->stream_file('sip-silence'); # stop music-on-hold process
	$AGI->stream_file("$welcome_message_filename");
	}


if ( ($hold_message_counter > $prompt_interval) && ($prompt_interval > 0) )
	{
	$now_date_epoch = time();
	$FDtarget = ($now_date_epoch + 10);
	($Fsec,$Fmin,$Fhour,$Fmday,$Fmon,$Fyear,$Fwday,$Fyday,$Fisdst) = localtime($FDtarget);
	$Fyear = ($Fyear + 1900);
	$Fmon++;
	if ($Fmon < 10) {$Fmon = "0$Fmon";}
	if ($Fmday < 10) {$Fmday = "0$Fmday";}
	if ($Fhour < 10) {$Fhour = "0$Fhour";}
	if ($Fmin < 10) {$Fmin = "0$Fmin";}
	if ($Fsec < 10) {$Fsec = "0$Fsec";}
		$FDtsSQLdate = "$Fyear$Fmon$Fmday$Fhour$Fmin$Fsec";

	$stmtA = "UPDATE vicidial_auto_calls set last_update_time='$FDtsSQLdate' where callerid='$callerid' order by call_time desc limit 1;";
	$affected_rows = $dbhA->do($stmtA);
		$dbhP=$dbhA;   $mysql_count='02081';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
	if ($AGILOG) {$agi_string = "--    VDAC posttime record: |$affected_rows|$FDtsSQLdate|$callerid|";   &agi_output;}

	$AGI->stream_file('sip-silence'); # stop music-on-hold process
	$AGI->stream_file('sip-silence'); # stop music-on-hold process
	$AGI->stream_file("$onhold_prompt_filename"); # this prompt must be less than 10 seconds long
	$hold_message_counter = 0;
	$start_moh=1;
	$moh_delay=1;
	if ($play_place_in_line =~ /Y/i) {$start_place_in_line=1; $moh_delay=2;}
	if ($play_estimate_hold_time =~ /Y/i) {$start_hold_estimate=1; $moh_delay=2;}
	if ($hold_time_option !~ /NONE/) {$start_hold_estimate=1; $moh_delay=2;};
	if ($drop_timer >= 3) {$drop_timer = ($drop_timer + 5);} # add prompt play time to total queue time
	}
  else {$hold_message_counter++;}
if ($hold_tone_counter > 3)
	{
	$hold_tone_counter = 0;
	}
  else {$hold_tone_counter++;}
    
##### play the place in line of the caller if option is set
if ( ($start_place_in_line > 0) && ($moh_delay == '1') )
	{
	$now_date_epoch = time();
	$FDtarget = ($now_date_epoch + 5);
	($Fsec,$Fmin,$Fhour,$Fmday,$Fmon,$Fyear,$Fwday,$Fyday,$Fisdst) = localtime($FDtarget);
	$Fyear = ($Fyear + 1900);
	$Fmon++;
	if ($Fmon < 10) {$Fmon = "0$Fmon";}
	if ($Fmday < 10) {$Fmday = "0$Fmday";}
	if ($Fhour < 10) {$Fhour = "0$Fhour";}
	if ($Fmin < 10) {$Fmin = "0$Fmin";}
	if ($Fsec < 10) {$Fsec = "0$Fsec";}
		$FDtsSQLdate = "$Fyear$Fmon$Fmday$Fhour$Fmin$Fsec";

	$stmtA = "UPDATE vicidial_auto_calls set last_update_time='$FDtsSQLdate' where callerid='$callerid' order by call_time desc limit 1;";
	$affected_rows = $dbhA->do($stmtA);
		$dbhP=$dbhA;   $mysql_count='02082';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
	if ($AGILOG) {$agi_string = "--    VDAC posttime record: |$affected_rows|$FDtsSQLdate|$callerid|";   &agi_output;}

	$place=0;
	if ($rec_countWAIT > 0) {$place = $rec_countWAIT;}
	if ($rec_countWAITrem > 0) {$place = $rec_countWAITrem;}
	$place++;
	if ($AGILOG) {$agi_string = "--    PLACE IN LINE: |$campaign_id|$place|";   &agi_output;}

	$AGI->stream_file('sip-silence'); # stop music-on-hold process
	$AGI->stream_file('sip-silence'); # stop music-on-hold process
	if ($place > 1)
		{
		$AGI->stream_file('queue-thereare'); # you are currently caller number
		$AGI->say_number("$place");
		if ($drop_timer >= 3) {$drop_timer = ($drop_timer + 2);} # add prompt play time to total queue time
		}
	else
		{
		$AGI->stream_file('queue-youarenext'); # your call is now first in line
		if ($drop_timer >= 3) {$drop_timer = ($drop_timer + 5);} # add prompt play time to total queue time
		}

	$start_place_in_line=0;
	}

##### calculate hold time estimate if needed
$holdtime_estimate=1;   $holdtime_estimate_sec=0;   $livetime_estimate_sec=0;   # Make hold time estimate available to other sections
if ( ($start_hold_estimate > 0) && ($moh_delay == '1') )
	{
	$now_date_epoch = time();
	$FDtarget = ($now_date_epoch + 5);
	($Fsec,$Fmin,$Fhour,$Fmday,$Fmon,$Fyear,$Fwday,$Fyday,$Fisdst) = localtime($FDtarget);
	$Fyear = ($Fyear + 1900);
	$Fmon++;
	if ($Fmon < 10) {$Fmon = "0$Fmon";}
	if ($Fmday < 10) {$Fmday = "0$Fmday";}
	if ($Fhour < 10) {$Fhour = "0$Fhour";}
	if ($Fmin < 10) {$Fmin = "0$Fmin";}
	if ($Fsec < 10) {$Fsec = "0$Fsec";}
		$FDtsSQLdate = "$Fyear$Fmon$Fmday$Fhour$Fmin$Fsec";

	$stmtA = "UPDATE vicidial_auto_calls set last_update_time='$FDtsSQLdate' where callerid='$callerid' order by call_time desc limit 1;";
	$affected_rows = $dbhA->do($stmtA);
		$dbhP=$dbhA;   $mysql_count='02083';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
	if ($AGILOG) {$agi_string = "--    VDAC posttime record: |$affected_rows|$FDtsSQLdate|$callerid|";   &agi_output;}

	$stmtA = "SELECT queue_seconds FROM vicidial_closer_log where campaign_id = '$channel_group' order by call_date desc limit 5;";
		if ($AGILOG) {$agi_string = "|$stmtA|";   &agi_output;}
	$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
	$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
	$sthArows=$sthA->rows;
		$dbhP=$dbhA;   $mysql_count='02084';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
	$r=0;
	$agi_string="\n";
		while ($sthArows > $r)
		{
		@aryA = $sthA->fetchrow_array;
		$holdtime_estimate_sec = ($holdtime_estimate_sec + $aryA[0]);
		$r++;
		}
	$sthA->finish();
	$holdtime_estimate_sec = int( ($holdtime_estimate_sec / $r) + 1);
	
	$stmtA = "SELECT stage FROM vicidial_auto_calls where status = 'LIVE' and campaign_id = '$channel_group' and call_time <= \"$SQLdateBEGIN\";";
		if ($AGILOG) {$agi_string = "|$stmtA|";   &agi_output;}
	$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
	$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
	$sthArows=$sthA->rows;
		$dbhP=$dbhA;   $mysql_count='02085';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
	$s=0;   $t=0;
	$agi_string="\n";
		while ($sthArows > $s)
		{
		@aryA = $sthA->fetchrow_array;
		$stage_wait_sec = $aryA[0];
		$stage_wait_sec =~ s/LIVE-|CLOSE-|CLOSER-//gi;
		if ($stage_wait_sec >= $holdtime_estimate_sec)
			{
			$livetime_estimate_sec = ($livetime_estimate_sec + $stage_wait_sec);
			$t++;
			}
		$s++;
		}
	$sthA->finish();
	
	if ( ($livetime_estimate_sec > 0) && ($t > 0) ) 
		{
		$livetime_estimate_sec = int( ($livetime_estimate_sec / $t) + 1);
		$avgtime_estimate_sec = int( ($livetime_estimate_sec + $holdtime_estimate_sec) / 2);
		}
	else
		{$avgtime_estimate_sec = $holdtime_estimate_sec;}

	$holdtime_estimate_sec_diff = ($avgtime_estimate_sec - $drop_timer);
	if ($holdtime_estimate_sec_diff < 10) {$holdtime_estimate_sec_diff=10;}
	$holdtime_estimate = int($holdtime_estimate_sec_diff / 60);
	$holdtime_estimate_sec_rem = ( $holdtime_estimate_sec_diff - ($holdtime_estimate * 60) );
	if ($AGILOG) {$agi_string = "--    HOLD ESTIMATE: |$campaign_id|$holdtime_estimate|$holdtime_estimate_sec_rem|$holdtime_estimate_sec_diff|     |$holdtime_estimate_sec|$livetime_estimate_sec|$avgtime_estimate_sec|";   &agi_output;}

##### play the hold time estimate to the caller if option is set
	if ($play_estimate_hold_time =~ /Y/i) 
		{
		$AGI->stream_file('sip-silence'); # stop music-on-hold process
		$AGI->stream_file('sip-silence'); # stop music-on-hold process

		if ($pretend_every_call_is_next > 0) 
			{
			$AGI->stream_file('queue-youarenext'); #  you are next in line
			}
		else 
			{ 
			$AGI->stream_file('queue-holdtime'); # the estimated hold time is currently
			if ($holdtime_estimate > 0)
				{
				$AGI->say_number("$holdtime_estimate");
				$AGI->stream_file('queue-minutes'); # minutes
				}
			if ($holdtime_estimate < 2) 
				{ 
				my $roundto = 5; # sensible values 5, 10, 15, ( 20, 30) 
				my $rounded_time = $holdtime_estimate_sec_diff - ( $holdtime_estimate_sec_diff % $roundto ) + $roundto;
				$AGI->say_number("$rounded_time");
				$AGI->stream_file('queue-seconds'); # seconds
				}
			} 
		}
	if ($drop_timer >= 3) {$drop_timer = ($drop_timer + 3);} # add prompt play time to total queue time

	$start_hold_estimate=0;
	$wait_in_queue = 1; # trigger hold-time-option is applicable
	}

##### check if hold_time_option is set to leave Queue	
if ( ($hold_time_option !~ /NONE/ ) && ( $holdtime_estimate_sec_diff > $hold_time_option_second ) && ($wait_in_queue < 2) )
{
$wait_in_queue=0; # exits wait loop
$DROPexten = ''; 
$exitwithkey=0;
if ($hold_time_option =~ /EXTENSION/)
	{
	if (length($hold_time_option_exten)>0)
		{$DROPexten = "$hold_time_option_exten";}
	}
if ($hold_time_option =~ /PRESS_VMAIL/)
	{
	$now_date_epoch = time();
	$FDtarget = ($now_date_epoch + 8);
	($Fsec,$Fmin,$Fhour,$Fmday,$Fmon,$Fyear,$Fwday,$Fyday,$Fisdst) = localtime($FDtarget);
	$Fyear = ($Fyear + 1900);
	$Fmon++;
	if ($Fmon < 10) {$Fmon = "0$Fmon";}
	if ($Fmday < 10) {$Fmday = "0$Fmday";}
	if ($Fhour < 10) {$Fhour = "0$Fhour";}
	if ($Fmin < 10) {$Fmin = "0$Fmin";}
	if ($Fsec < 10) {$Fsec = "0$Fsec";}
		$FDtsSQLdate = "$Fyear$Fmon$Fmday$Fhour$Fmin$Fsec";

	$stmtA = "UPDATE vicidial_auto_calls set last_update_time='$FDtsSQLdate' where callerid='$callerid' order by call_time desc limit 1;";
	$affected_rows = $dbhA->do($stmtA);
		$dbhP=$dbhA;   $mysql_count='02086';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
	if ($AGILOG) {$agi_string = "--    VDAC posttime record: |$affected_rows|$FDtsSQLdate|$callerid|";   &agi_output;}

	if ($drop_timer >= 3) {$drop_timer = ($drop_timer + 8);} # add prompt play time to total queue time

	$AGI->stream_file('sip-silence'); # stop music-on-hold process
	$AGI->stream_file('sip-silence'); # stop music-on-hold process

	&press_one_to_leave_voicemail;

	if ($pin =~ /1/)
		{
		$DROPexten = "$voicemail_dump_exten$hold_time_option_voicemail";
		$HT_status='QVMAIL';

		if ($enable_queuemetrics_logging > 0)
			{
			$dbhB = DBI->connect("DBI:mysql:$queuemetrics_dbname:$queuemetrics_server_ip:3306", "$queuemetrics_login", "$queuemetrics_pass")
			 or die "Couldn't connect to database: " . DBI->errstr;

			if ($DBX) {print "CONNECTED TO DATABASE:  $queuemetrics_server_ip|$queuemetrics_dbname\n";}

			$place=0;
			if ($rec_countWAIT > 0) {$place = $rec_countWAIT;}
			if ($rec_countWAITrem > 0) {$place = $rec_countWAITrem;}
			$place++;

			$stmtB = "INSERT INTO queue_log SET partition='P01',time_id='$now_date_epoch',call_id='$YqueryCID',queue='$channel_group',agent='NONE',verb='EXITWITHKEY',data1='1',data2='$place',serverid='$queuemetrics_log_id';";
			$Baffected_rows = $dbhB->do($stmtB);
				$dbhP=$dbhB;   $stmtA=$stmtB;   $mysql_count='02087';   $MEL_aff_rows=$Baffected_rows;   &mysql_error_logging;

			$stmtB = "INSERT INTO queue_log SET partition='P01',time_id='$now_date_epoch',call_id='$YqueryCID',queue='$channel_group',agent='NONE',verb='CALLSTATUS',data1='QVMAIL',serverid='$queuemetrics_log_id';";
			$Baffected_rows = $dbhB->do($stmtB);
				$dbhP=$dbhB;   $stmtA=$stmtB;   $mysql_count='02088';   $MEL_aff_rows=$Baffected_rows;   &mysql_error_logging;

			$exitwithkey++;

			$dbhB->disconnect();
			}
		}
	else
		{
		$DROPexten='';
		$wait_in_queue = 2; #continue waiting on hold
		}
	}
if ($hold_time_option =~ /VOICEMAIL/)
	{
	if (length($hold_time_option_voicemail)>0)
		{$DROPexten = "$voicemail_dump_exten$hold_time_option_voicemail";}
	}
if ($hold_time_option =~ /IN_GROUP/)
	{ # 90009*CL_uk3survy_*8301*10000123*universal*7275551212*1234*"
	$S='*';
	$DROPexten = "90009*$hold_time_option_xfer_group$S$S$insert_lead_id$S$S$phone_number$S$fronter$S";
	}
if ($hold_time_option =~ /CALLERID_CALLBACK/)
	{
	if (length($hold_time_option_exten)>0)
		{$DROPexten = "$hold_time_option_exten";}
	# if callerid is not valid do not execute
	if ( ( length($phone_number) > 6 ) && ( $phone_number > 0) )
		{
		### insert a record into the vicidial_list table 
		$stmtA = "INSERT INTO vicidial_list (entry_date,modify_date,status,user,vendor_lead_code,source_id,list_id,called_since_last_reset,phone_code,phone_number,security_phrase,called_count,gmt_offset_now,comments) values('$SQLdate','$tsSQLdate','INBND','$fronter','$inbound_number','VDCL','$hold_time_option_callback_list_id','N','$phone_code','$phone_number','$channel_group','1','$local_gmt','$VLcomments');";
		$affected_rows = $dbhA->do($stmtA);
			$dbhP=$dbhA;   $mysql_count='02089';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
		$cbc=0;
		$stmtB = "select LAST_INSERT_ID() LIMIT 1;";
		$sthA = $dbhA->prepare($stmtB) or die "preparing: ",$dbhA->errstr;
		$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
		$sthArows=$sthA->rows;
			$dbhP=$dbhA;   $stmtA=$stmtB;   $mysql_count='02103';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
		while ($sthArows > $cbc)
			{
			@aryA = $sthA->fetchrow_array;
			$insert_lead_id = "$aryA[0]";
			$cbc++; 
			}
		$sthA->finish();

		if ($AGILOG) {$agi_string = "VDAD vicidial_list insert |$insert_lead_id|$stmtA|";   &agi_output;}

		$DROPexten = "8300";

		$AGI->stream_file('sip-silence'); # stop music-on-hold process
		$AGI->stream_file('sip-silence'); # stop music-on-hold process
		$AGI->stream_file("$hold_time_option_callback_filename");
		}
	else
		{
		$wait_in_queue = 2; #continue waiting
		}
	
	}

if ($AGILOG) {$agi_string = "--    VDCL HOLD TIME OPT: |$hold_time_option|$DROPexten|$wait_in_queue|";   &agi_output;}

if ($wait_in_queue < 1)
	{
	if (length($DROPexten)>0)
		{	### if DROP extension is defined then send the dropped call there instead of hangup

		### use STDOUT to send call to proper DROP location
		$VHqueryCID = "VH$CIDdate$VDADconf_exten";

		if ($no_delay_call_route =~ /N/)
			{
			$AGI->stream_file('ding'); # stop music-on-hold process
			sleep(1);
			}

		$stmtA = "DELETE FROM vicidial_auto_calls where callerid='$callerid' and server_ip='$VARserver_ip' order by call_time desc limit 1;";
		$affected_rows = $dbhA->do($stmtA);
			$dbhP=$dbhA;   $mysql_count='02090';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
		if ($AGILOG) {$agi_string = "--    VDCL vac record deleted: |$affected_rows| $VDADcampaign|";   &agi_output;}

		if ($drop_seconds < 1) {$drop_seconds = $drop_timer;}

		if (length($HT_status)<1) {$HT_status='HOLDTO';}
		$stmtA = "UPDATE vicidial_closer_log set status='$HT_status',end_epoch='$now_date_epoch',length_in_sec='$drop_seconds',queue_seconds='$drop_seconds',term_reason='HOLDTIME' where lead_id = '$insert_lead_id' order by start_epoch desc limit 1;";
		$affected_rows = $dbhA->do($stmtA);
			$dbhP=$dbhA;   $mysql_count='02091';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
		if ($AGILOG) {$agi_string = "--    VDCL vcl update: |$affected_rows|$insert_lead_id|\n|$stmtA|";   &agi_output;}

		$stmtA = "UPDATE vicidial_list set status='HOLDTO' where lead_id = '$insert_lead_id';";
		$affected_rows = $dbhA->do($stmtA);
			$dbhP=$dbhA;   $mysql_count='02092';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
		if ($AGILOG) {$agi_string = "--    VDCL vl update: |$affected_rows|$insert_lead_id|\n|$stmtA|";   &agi_output;}

		if ( ($enable_queuemetrics_logging > 0) && ($exitwithkey < 1) )
			{
			$dbhB = DBI->connect("DBI:mysql:$queuemetrics_dbname:$queuemetrics_server_ip:3306", "$queuemetrics_login", "$queuemetrics_pass")
			 or die "Couldn't connect to database: " . DBI->errstr;

			if ($DBX) {print "CONNECTED TO DATABASE:  $queuemetrics_server_ip|$queuemetrics_dbname\n";}

			$place=0;
			if ($rec_countWAIT > 0) {$place = $rec_countWAIT;}
			if ($rec_countWAITrem > 0) {$place = $rec_countWAITrem;}
			$place++;

			$stmtB = "INSERT INTO queue_log SET partition='P01',time_id='$now_date_epoch',call_id='$YqueryCID',queue='$channel_group',agent='NONE',verb='EXITWITHKEY',data1='2',data2='$place',serverid='$queuemetrics_log_id';";
			$Baffected_rows = $dbhB->do($stmtB);
				$dbhP=$dbhB;   $stmtA=$stmtB;   $mysql_count='02093';   $MEL_aff_rows=$Baffected_rows;   &mysql_error_logging;

			$stmtB = "INSERT INTO queue_log SET partition='P01',time_id='$now_date_epoch',call_id='$YqueryCID',queue='$channel_group',agent='NONE',verb='CALLSTATUS',data1='HOLDTO',serverid='$queuemetrics_log_id';";
			$Baffected_rows = $dbhB->do($stmtB);
				$dbhP=$dbhB;   $stmtA=$stmtB;   $mysql_count='02094';   $MEL_aff_rows=$Baffected_rows;   &mysql_error_logging;

			$dbhB->disconnect();
			}

		$AGI->stream_file('sip-silence');
		$AGI->stream_file('sip-silence');

		if ($AGILOG) {$agi_string = "exiting the VDAD app, transferring call to $DROPexten";   &agi_output;}
		print "SET CONTEXT $ext_context\n";
			checkresult($result);
		print "SET EXTENSION $DROPexten\n";
			checkresult($result);
		print "SET PRIORITY 1\n";
			checkresult($result);

		$dbhA->disconnect();

		exit;
		}


	}
}



##### wait before looking again for an agent to take the call
if ($wait_in_queue > 0) 
	{
	if ($drop_timer < 3)
		{
		### sleep for 23 hundredths of a second
		usleep(1*230*1000);
		$drop_timer = ($drop_timer + 0.25);
		if ($moh_delay > 0)
			{$moh_delay = ($moh_delay - 1);}
		}
	else
		{
		if ( ($start_moh > 0) && ($moh_delay < 1) )
			{
			$start_moh=0;
			print "SET MUSIC ON $moh_context\n";
				checkresult($result);
			}
		if ($moh_delay > 0)
			{$moh_delay = ($moh_delay - 1);}
		### sleep for 99 hundredths of a second
		usleep(1*990*1000);

	#	$drop_timer++;
		$NOWsec = time();
		$drop_timer = ($NOWsec - $start_epoch);
		}
	}

$stmtA = "UPDATE vicidial_auto_calls set stage='LIVE-$drop_timer' where callerid='$callerid';";
$affected_rows = $dbhA->do($stmtA);
	$dbhP=$dbhA;   $mysql_count='02095';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
if ($affected_rows < 1)
	{
	$stmtA = "INSERT INTO vicidial_auto_calls SET server_ip='$VARserver_ip',campaign_id='$channel_group',status='LIVE',lead_id='$insert_lead_id',uniqueid='$uniqueid',callerid='$callerid',channel='$channel',phone_code='$phone_code',phone_number='$phone_number',call_time='$SQLdate',call_type='IN',stage='LIVE-$drop_timer',queue_priority='$queue_priority' $adSQL;";
	$affected_rows = $dbhA->do($stmtA);
		$dbhP=$dbhA;   $mysql_count='02096';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
		if ($AGILOG) {$agi_string = "$affected_rows|VDAC-reinsert|$stmtA|";   &agi_output;}
	}
else
	{
#	if ($AGILOG) {$agi_string = "--    VDAD : |$affected_rows|update vac table: $callerid\n|$stmtA|$drop_timer ($NOWsec - $start_epoch)|";   &agi_output;}
	}
}

###################################################
### End of Loop to try to send call to an agent ###
### Time to figure out where to drop the call   ###

if ($drop_timer > $DROP_TIME)
{
($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
$year = ($year + 1900);
$mon++;
if ($mon < 10) {$mon = "0$mon";}
if ($mday < 10) {$mday = "0$mday";}
if ($hour < 10) {$Fhour = "0$hour";}
if ($min < 10) {$min = "0$min";}
if ($sec < 10) {$sec = "0$sec";}

$now_date_epoch = time();
$now_date = "$year-$mon-$mday $hour:$min:$sec";
	$CIDdate = "$mon$mday$hour$min$sec";
	$tsSQLdate = "$year$mon$mday$hour$min$sec";
	$SQLdate = "$year-$mon-$mday $hour:$min:$sec";
#	$VDADvoicemail_ext = '';

if ($enable_queuemetrics_logging > 0)
	{
	$dbhB = DBI->connect("DBI:mysql:$queuemetrics_dbname:$queuemetrics_server_ip:3306", "$queuemetrics_login", "$queuemetrics_pass")
	 or die "Couldn't connect to database: " . DBI->errstr;

	if ($DBX) {print "CONNECTED TO DATABASE:  $queuemetrics_server_ip|$queuemetrics_dbname\n";}

	$place=0;
	if ($rec_countWAIT > 0) {$place = $rec_countWAIT;}
	if ($rec_countWAITrem > 0) {$place = $rec_countWAITrem;}
	$place++;

	$stmtB = "INSERT INTO queue_log SET partition='P01',time_id='$now_date_epoch',call_id='$YqueryCID',queue='$channel_group',agent='NONE',verb='EXITWITHTIMEOUT',data1='$place',serverid='$queuemetrics_log_id';";
	$Baffected_rows = $dbhB->do($stmtB);
		$dbhP=$dbhB;   $stmtA=$stmtB;   $mysql_count='02097';   $MEL_aff_rows=$Baffected_rows;   &mysql_error_logging;

	$stmtB = "INSERT INTO queue_log SET partition='P01',time_id='$now_date_epoch',call_id='$YqueryCID',queue='$channel_group',agent='NONE',verb='CALLSTATUS',data1='DROP',serverid='$queuemetrics_log_id';";
	$Baffected_rows = $dbhB->do($stmtB);
		$dbhP=$dbhB;   $stmtA=$stmtB;   $mysql_count='02098';   $MEL_aff_rows=$Baffected_rows;   &mysql_error_logging;

	$dbhB->disconnect();
	}

$DROPexten = '';
if ($drop_seconds < 1) 
	{
	$drop_seconds = $DROP_TIME;
	}

if ( ($channel_group =~ /AGENTDIRECT/) && (length($agent_only) > 1) && (length($user_unavailable_action) > 1) )
	{
	$drop_action = $user_unavailable_action;
	$drop_inbound_group = $did_in_group;
	$VDADvoicemail_ext = $did_voicemail_ext;
	}

if ($drop_action =~ /MESSAGE|EXTEN/)
	{
	if ( ($channel_group =~ /AGENTDIRECT/) && (length($agent_only) > 1) && (length($user_unavailable_action) > 1) )
		{
		$drop_exten = $did_extension;
		$ext_context = $did_exten_context;
		}
	if (length($drop_exten)>0)
		{$DROPexten = "$drop_exten";}
	}
if ($drop_action =~ /VOICEMAIL/)
	{
	if (length($VDADvoicemail_ext)>0)
		{$DROPexten = "$voicemail_dump_exten$VDADvoicemail_ext";}
	}
if ($drop_action =~ /IN_GROUP/)
	{ # 90009*CL_uk3survy_*8301*10000123*universal*7275551212*1234*"
	$S='*';
	$DROPexten = "90009*$drop_inbound_group$S$S$insert_lead_id$S$S$phone_number$S$fronter$S";
	}
if ($drop_action =~ /PHONE/)
	{
	### Grab phone dialplan number value from the database
	$stmtA = "SELECT dialplan_number FROM phones where server_ip='$did_phone_server_ip' and extension='$did_phone';";
	$sthA = $dbhA->prepare($stmtA) or die "preparing: ",$dbhA->errstr;
	$sthA->execute or die "executing: $stmtA ", $dbhA->errstr;
	$sthArows=$sthA->rows;
		$dbhP=$dbhA;   $mysql_count='02002';   $MEL_aff_rows=$sthArows;   &mysql_error_logging;
	if ($sthArows > 0)
		{
		@aryA = $sthA->fetchrow_array;
		$did_phone_dialplan_number =	$aryA[0];
		}
	$sthA->finish();

	### format the remote server dialstring to get the call to the overflow agent meetme room
	$S='*';
	if( $did_phone_server_ip =~ m/(\S+)\.(\S+)\.(\S+)\.(\S+)/ )
		{
		$a = leading_zero($1); 
		$b = leading_zero($2); 
		$c = leading_zero($3); 
		$d = leading_zero($4);
		$DIDphoneDIALstr = "$a$S$b$S$c$S$d$S";
		}
	$DROPexten = "$DIDphoneDIALstr$did_phone_dialplan_number";
	}

if ($AGILOG) {$agi_string = "--    VDCL DROP: |$drop_action|$DROPexten|";   &agi_output;}

	$stmtA = "DELETE FROM vicidial_auto_calls where callerid='$callerid' and server_ip='$VARserver_ip' order by call_time desc limit 1;";
	$affected_rows = $dbhA->do($stmtA);
		$dbhP=$dbhA;   $mysql_count='02099';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
	if ($AGILOG) {$agi_string = "--    VDCL vac record deleted: |$affected_rows| $VDADcampaign|";   &agi_output;}

	$stmtA = "UPDATE vicidial_closer_log set status='DROP',end_epoch='$now_date_epoch',length_in_sec='$drop_seconds',queue_seconds='$drop_seconds',term_reason='QUEUETIMEOUT' where lead_id = '$insert_lead_id' order by start_epoch desc limit 1;";
	$affected_rows = $dbhA->do($stmtA);
		$dbhP=$dbhA;   $mysql_count='02100';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
	if ($AGILOG) {$agi_string = "--    VDCL vcl update: |$affected_rows|$insert_lead_id|\n|$stmtA|";   &agi_output;}

	$stmtA = "UPDATE vicidial_list set status='XDROP' where lead_id = '$insert_lead_id';";
	$affected_rows = $dbhA->do($stmtA);
		$dbhP=$dbhA;   $mysql_count='02101';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
	if ($AGILOG) {$agi_string = "--    VDCL vl update: |$affected_rows|$insert_lead_id|\n|$stmtA|";   &agi_output;}

	### use STDOUT to send call to proper DROP location
	$VHqueryCID = "VH$CIDdate$VDADconf_exten";

	if (length($DROPexten)>0)
		{	### if DROP extension is defined then send the dropped call there instead of hangup

		if ($no_delay_call_route =~ /N/)
			{
			$AGI->stream_file('ding'); # stop music-on-hold process
			sleep(1);
			}

		$AGI->stream_file('sip-silence');
		$AGI->stream_file('sip-silence');

		if ($AGILOG) {$agi_string = "exiting the VDAD app, transferring call to $DROPexten";   &agi_output;}
		print "SET CONTEXT $ext_context\n";
			checkresult($result);
		print "SET EXTENSION $DROPexten\n";
			checkresult($result);
		print "SET PRIORITY 1\n";
			checkresult($result);
		}
	else
		{
		### insert a NEW record to the vicidial_manager table to be processed
		$stmtA = "INSERT INTO vicidial_manager values('','','$SQLdate','NEW','N','$VARserver_ip','','Hangup','$VHqueryCID','Channel: $channel','','','','','','','','','')";
		$affected_rows = $dbhA->do($stmtA);  
			$dbhP=$dbhA;   $mysql_count='02102';   $MEL_aff_rows=$affected_rows;   &mysql_error_logging;
		if ($AGILOG) {$agi_string = "--    VDCL call_hungup timeout: |$VHqueryCID|$VDADconf_exten|$channel|insert to vicidial_manager";   &agi_output;}
		}
}

$dbhA->disconnect();

exit;






sub enter_pin_number
{

$digits_to_collect =~ s/DIGITID//gi;

# please enter the pin number followed by the pound key
# please enter your X digit pin number

$digit='';
undef $digit;
$interrupt_digit='';
undef $interrupt_digit;

$interrupt_digit = $AGI->stream_file('four_digit_id','123456789');   

	if ($AGILOG) {$agi_string = "interrupt_digit |$interrupt_digit|";   &agi_output;}

$digits_being_entered=1;
$totalDTMF='';
if ($interrupt_digit > 1)
	{
	if ($interrupt_digit == 48) {$interrupt_digit=0;}
	if ($interrupt_digit == 49) {$interrupt_digit=1;}
	if ($interrupt_digit == 50) {$interrupt_digit=2;}
	if ($interrupt_digit == 51) {$interrupt_digit=3;}
	if ($interrupt_digit == 52) {$interrupt_digit=4;}
	if ($interrupt_digit == 53) {$interrupt_digit=5;}
	if ($interrupt_digit == 54) {$interrupt_digit=6;}
	if ($interrupt_digit == 55) {$interrupt_digit=7;}
	if ($interrupt_digit == 56) {$interrupt_digit=8;}
	if ($interrupt_digit == 57) {$interrupt_digit=9;}
	
	$totalDTMF=$interrupt_digit;
	}

$digit_loop_counter=0;

while ( ($digit_loop_counter < $digits_to_collect) )
	{
	$digit = chr($AGI->wait_for_digit('10000'));  # wait 10 seconds for input or until the pound key is pressed
	if ($digit =~ /\d/)
		{
		$totalDTMF = "$totalDTMF$digit";
		if ($AGILOG) {$agi_string = "digit |$digit|     TotalDTMF |$totalDTMF|";   &agi_output;}
#		$AGI->say_digits("$digit");
		undef $digit;
		}
	else
		{
		$digit_loop_counter=$digits_to_collect;
		}
	
	$digit_loop_counter++;
	}

$totalDTMF =~ s/\D//gi;
$pin = $totalDTMF;
if ($totalDTMF) {if ($AGILOG) {$agi_string = "digit |$digit|     TotalDTMF |$totalDTMF|";   &agi_output;}}
}



sub press_one_to_leave_voicemail
{

$digits_to_collect = 1;

# To be called back when a representative is available, press 1

$digit='';
undef $digit;
$interrupt_digit='';
undef $interrupt_digit;
$digit_loop_counter=0;

$interrupt_digit = $AGI->stream_file('to-be-called-back','1');   
if ($interrupt_digit < 2)
	{$interrupt_digit = $AGI->stream_file('digits/1','1');}  

	if ($AGILOG) {$agi_string = "interrupt_digit |$interrupt_digit|";   &agi_output;}

$digits_being_entered=1;
$totalDTMF='';
if ($interrupt_digit > 1)
	{
	if ($interrupt_digit == 48) {$interrupt_digit=0;}
	if ($interrupt_digit == 49) {$interrupt_digit=1;}
	if ($interrupt_digit == 50) {$interrupt_digit=2;}
	if ($interrupt_digit == 51) {$interrupt_digit=3;}
	if ($interrupt_digit == 52) {$interrupt_digit=4;}
	if ($interrupt_digit == 53) {$interrupt_digit=5;}
	if ($interrupt_digit == 54) {$interrupt_digit=6;}
	if ($interrupt_digit == 55) {$interrupt_digit=7;}
	if ($interrupt_digit == 56) {$interrupt_digit=8;}
	if ($interrupt_digit == 57) {$interrupt_digit=9;}
	
	$totalDTMF=$interrupt_digit;
	$digit_loop_counter++;
	}


while ( ($digit_loop_counter < $digits_to_collect) )
	{
	$digit = chr($AGI->wait_for_digit('4000'));  # wait 4 seconds for input or until the key is pressed
	if ($digit =~ /\d/)
		{
		$totalDTMF = "$totalDTMF$digit";
		if ($AGILOG) {$agi_string = "digit |$digit|     TotalDTMF |$totalDTMF|";   &agi_output;}
#		$AGI->say_digits("$digit");
		undef $digit;
		}
	else
		{
		$digit_loop_counter=$digits_to_collect;
		}
	
	$digit_loop_counter++;
	}

$totalDTMF =~ s/\D//gi;
$pin = $totalDTMF;
if ($totalDTMF) {if ($AGILOG) {$agi_string = "digit |$digit|     TotalDTMF |$totalDTMF|";   &agi_output;}}
}



sub checkresult {
	my ($res) = @_;
	my $retval;
	$tests++;
	chomp $res;
	if ($res =~ /^200/) {
		$res =~ /result=(-?\d+)/;
		if (!length($1)) {
		#	print STDERR "FAIL ($res)\n";
			$fail++;
		} else {
		#	print STDERR "PASS ($1)\n";
			$pass++;
		}
	} else {
	#	print STDERR "FAIL (unexpected result '$res')\n";
		$fail++;
	}
}


sub leading_zero($) 
{
    $_ = $_[0];
    s/^(\d)$/0$1/;
    s/^(\d\d)$/0$1/;
    return $_;
} # End of the leading_zero() routine.



### you're call is very important to us, please stay on the line and you will be transferred to the next available agent


sub agi_output
{
if ($AGILOG >=2)
	{
	### open the log file for writing ###
	open(Lout, ">>$AGILOGfile")
			|| die "Can't open $AGILOGfile: $!\n";
	print Lout "$now_date|$script|$agi_string\n";
	close(Lout);
	}
	### send to STDERR writing ###
if ( ($AGILOG == '1') || ($AGILOG == '3') )
	{print STDERR "$now_date|$script|$agi_string\n";}
$agi_string='';
}


sub mysql_error_logging
{
	$errno='';
	$error='';
	if ( ($mel > 0) || ($one_mysql_log > 0) )
		{
		$errno = $dbhP->err();
		if ( ($errno > 0) || ($mel > 1) || ($one_mysql_log > 0) )
			{
			$error = $dbhP->errstr();
			### open the log file for writing ###
			open(Eout, ">>$ERRLOGfile")
					|| die "Can't open $ERRLOGfile: $!\n";
			print Eout "$now_date|$script|$mysql_count|$MEL_aff_rows|$errno|$error|$stmtA|$callerid|$insert_lead_id|\n";
			close(Eout);
			}
		}
	$one_mysql_log=0;
}


sub trigger_transfer_process
{
#	$DS='--';
#	$BEGIN='BEGIN';
#
#	$CLI = "/usr/bin/date >> $PRSTESTfile &";
#	$CLI = "/root/phone.pl $insert_lead_id$DS$insert_close_id$DS$CLInow_date$DS$VDADuser$DS$phone_number$DS$DS$BEGIN$DS >> $PRSTESTfile &";
#
#	`$CLI`;
#
#	if ($AGILOG >=2)
#		{
#		### open the log file for writing ###
#		open(Pout, ">>$PRSLOGfile")
#				|| die "Can't open $AGILOGfile: $!\n";
#		print Pout "$now_date|$VDADconf_exten|$VDADuser|$VDADextension|$insert_lead_id|$phone_number|$insert_close_id|$channel_group|$drop_timer|$CLI|\n";
#		close(Pout);
#		}
}
